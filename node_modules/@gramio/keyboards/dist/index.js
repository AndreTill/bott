"use strict";
/**
 * @module
 *
 * Framework-agnostic Telegram bot keyboard (and inline query result) builder with many cool features!
 *
 * @example usage
 * ```ts
 * import { Keyboard } from "@gramio/keyboards";
 *
 * const keyboard = new Keyboard()
 *     .text("first row")
 *     .row()
 *     .text("second row")
 *     .build(); // NOTE: In GramIO, you don't have to use the ".build" method
 * ```
 *
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
// INFO: Temp polyfill, more info https://github.com/microsoft/TypeScript/issues/55453#issuecomment-1687496648
// biome-ignore lint/suspicious/noExplicitAny: <explanation>
Symbol.metadata ??= Symbol("Symbol.metadata");
__exportStar(require("./keyboard"), exports);
__exportStar(require("./inline-keyboard"), exports);
__exportStar(require("./remove-keyboard"), exports);
__exportStar(require("./force-reply-keyboard"), exports);
__exportStar(require("./base-keyboard-constructor"), exports);
__exportStar(require("./inline-query"), exports);
