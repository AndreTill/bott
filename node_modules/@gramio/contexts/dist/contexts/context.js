"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = void 0;
const inspectable_1 = require("inspectable");
const utils_1 = require("../utils");
/** Main base context */
class Context {
    bot;
    updateId;
    update;
    updateType;
    constructor(options) {
        this.bot = options.bot;
        this.updateType = options.updateType;
        this.updateId = options.updateId;
        this.update = options.update;
    }
    /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    is(rawTypes) {
        const types = Array.isArray(rawTypes) ? rawTypes : [rawTypes];
        // TODO: it is interfering, make 'subTypes' logic maybe?
        if (types.includes("service_message")) {
            types.push(...utils_1.SERVICE_MESSAGE_EVENTS);
        }
        return types.includes(this.updateType);
    }
}
exports.Context = Context;
(0, inspectable_1.inspectable)(Context, {
    serialize(context) {
        return {};
    },
});
