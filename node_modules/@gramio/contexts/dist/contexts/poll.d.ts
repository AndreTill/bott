import type { TelegramObjects } from "@gramio/types";
import { Poll } from "../structures/index";
import type { BotLike } from "../types";
import { type Constructor, PollType, type Require, type RequireValue } from "../types";
import { Context } from "./context";
import { CloneMixin } from "./mixins/index";
interface PollContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramPoll;
    updateId: number;
}
/**
 * This object contains information about a poll.
 *
 * [Documentation](https://core.telegram.org/bots/api/#poll)
 */
declare class PollContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramPoll;
    constructor(options: PollContextOptions<Bot>);
    /** Returns `true` if current poll is a regular one */
    isRegular(): this is RequireValue<this, "type", PollType.Regular>;
    /** Returns `true` if current poll is a quiz */
    isQuiz(): this is RequireValue<this, "type", PollType.Quiz>;
    /** Checks if poll has `correctOptionId` property */
    hasCorrectOptionId(): this is Require<this, "correctOptionId">;
    /** Checks if poll has `explanation` property */
    hasExplanation(): this is Require<this, "explanation">;
    /** Checks if poll has `explanationEntities` property */
    hasExplanationEntities(): this is Require<this, "explanationEntities">;
    /** Checks if poll has `openPeriod` property */
    hasOpenPeriod(): this is Require<this, "openPeriod">;
    /** Checks if poll has `closeDate` property */
    hasCloseDate(): this is Require<this, "closeDate">;
}
interface PollContext<Bot extends BotLike> extends Constructor<PollContext<Bot>>, Poll, CloneMixin<Bot, PollContext<Bot>, PollContextOptions<Bot>> {
}
export { PollContext };
