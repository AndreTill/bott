import type { TelegramObjects } from "@gramio/types";
import { Message } from "../structures/index";
import type { Constructor, Require } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, ChatControlMixin, ChatInviteControlMixin, ChatMemberControlMixin, ChatSenderControlMixin, CloneMixin, ForumMixin, NodeMixin, PinsMixin, SendMixin, TargetMixin } from "./mixins/index";
interface ForumTopicCreatedContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/** This object represents a service message about a new forum topic created in the chat. */
declare class ForumTopicCreatedContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    private event;
    constructor(options: ForumTopicCreatedContextOptions<Bot>);
    /** Name of the topic */
    get name(): string;
    /** Color of the topic icon in RGB format */
    get iconColor(): number;
    /** Unique identifier of the custom emoji shown as the topic icon */
    get iconCustomEmojiId(): string | undefined;
    /** Checks whether the event has `iconCustomEmojiId` property */
    hasIconCustomEmojiId(): this is Require<this, "iconCustomEmojiId">;
}
interface ForumTopicCreatedContext<Bot extends BotLike> extends Constructor<ForumTopicCreatedContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, ForumMixin<Bot>, ChatInviteControlMixin<Bot>, ChatControlMixin<Bot>, ChatSenderControlMixin<Bot>, ChatMemberControlMixin<Bot>, PinsMixin<Bot>, CloneMixin<Bot, ForumTopicCreatedContext<Bot>, ForumTopicCreatedContextOptions<Bot>> {
}
export { ForumTopicCreatedContext };
