"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WriteAccessAllowedContext = void 0;
const index_1 = require("../structures/index");
const utils_1 = require("../utils");
const inspectable_1 = require("inspectable");
const context_1 = require("./context");
const index_2 = require("./mixins/index");
/**
 * This object represents a service message about a user allowing a bot to write messages after adding it to the attachment menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method [requestWriteAccess](https://core.telegram.org/bots/webapps#initializing-mini-apps).
 *
 * [Documentation](https://core.telegram.org/bots/api/#writeaccessallowed)
 */
class WriteAccessAllowedContext extends context_1.Context {
    /** The raw data that is used for this Context */
    payload;
    constructor(options) {
        super({
            bot: options.bot,
            updateType: "write_access_allowed",
            updateId: options.updateId,
            update: options.update,
        });
        this.payload = options.payload;
    }
    /** Service message: user allows a bot to write messages after adding it to the attachment menu */
    get eventAllowance() {
        return new index_1.WriteAccessAllowed(this.payload
            .write_access_allowed);
    }
}
exports.WriteAccessAllowedContext = WriteAccessAllowedContext;
(0, utils_1.applyMixins)(WriteAccessAllowedContext, [
    index_1.Message,
    index_2.TargetMixin,
    index_2.SendMixin,
    index_2.ChatActionMixin,
    index_2.NodeMixin,
    index_2.PinsMixin,
    index_2.CloneMixin,
]);
(0, utils_1.memoizeGetters)(WriteAccessAllowedContext, ["eventAllowance"]);
(0, inspectable_1.inspectable)(WriteAccessAllowedContext, {
    serialize(context) {
        return {
            fromRequest: context.eventAllowance.fromRequest,
            webAppName: context.eventAllowance.webAppName,
            fromAttachmentMenu: context.eventAllowance.fromAttachmentMenu,
        };
    },
});
