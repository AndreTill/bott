import type { TelegramParams } from "@gramio/types";
import type { Optional } from "../../types";
import type { Context } from "../context";
import type { BotLike } from "../../types";
import type { TargetMixin } from "./target";
/** This object is a mixin that does all the chat-sender stuff, right? */
declare class ChatSenderControlMixin<Bot extends BotLike> {
    /** Bans a channel chat */
    banChatSender(senderChatId: number, params?: Optional<TelegramParams.BanChatSenderChatParams, "chat_id" | "sender_chat_id">): Promise<true>;
    /** Unbans a channel chat */
    unbanChatSender(senderChatId: number, params?: Optional<TelegramParams.UnbanChatSenderChatParams, "chat_id" | "sender_chat_id">): Promise<true>;
}
interface ChatSenderControlMixin<Bot extends BotLike> extends Context<Bot>, TargetMixin {
}
export { ChatSenderControlMixin };
