import type { TelegramParams } from "@gramio/types";
import type { Optional } from "../../types";
import type { Context } from "../context";
import type { BotLike } from "../../types";
import type { TargetMixin } from "./target";
/** This object represents a mixin that works with all `*ChatInviteLink` methods */
declare class ChatInviteControlMixin<Bot extends BotLike> {
    /** Generates new primary invite link */
    exportInviteLink(params?: Optional<TelegramParams.ExportChatInviteLinkParams, "chat_id">): Promise<string>;
    /** Creates an additional invite link */
    createInviteLink(params?: Optional<TelegramParams.CreateChatInviteLinkParams, "chat_id">): Promise<import("@gramio/types").TelegramChatInviteLink>;
    /** Edits non-primary invite link created by the bot */
    editInviteLink(link: string, params?: Optional<TelegramParams.EditChatInviteLinkParams, "chat_id" | "invite_link">): Promise<import("@gramio/types").TelegramChatInviteLink>;
    /** Revokes an invite link generated by a bot */
    revokeInviteLink(link: string, params?: Optional<TelegramParams.RevokeChatInviteLinkParams, "chat_id" | "invite_link">): Promise<import("@gramio/types").TelegramChatInviteLink>;
}
interface ChatInviteControlMixin<Bot extends BotLike> extends Context<Bot>, TargetMixin {
}
export { ChatInviteControlMixin };
