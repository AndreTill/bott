"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ForumMixin = void 0;
// TODO: there probably is a way to hide all irrelevant methods unless type guard said so
/** This object represents a mixin that's used in all topic-related updates  */
class ForumMixin {
    /** Checks whether this topic is actually a 'General' one */
    isGeneralTopic() {
        return this.threadId === undefined;
    }
    /** Returns custom emoji stickers, which can be used as a forum topic icon by any user */
    getTopicIcons() {
        return this.bot.api.getForumTopicIconStickers();
    }
    /** Creates a topic */
    createTopic(name, params) {
        return this.bot.api.createForumTopic({
            chat_id: this.chatId,
            name,
            ...params,
        });
    }
    /** Edits topic info */
    editTopic(params) {
        if (this.isGeneralTopic()) {
            throw new TypeError("called `editTopic` on a General topic; use `editGeneralTopic` instead");
        }
        return this.bot.api.editForumTopic({
            chat_id: this.chatId,
            message_thread_id: this.threadId,
            ...params,
        });
    }
    /** Edits General topic info */
    editGeneralTopic(params) {
        return this.bot.api.editGeneralForumTopic({
            chat_id: this.chatId,
            ...params,
        });
    }
    /** Closes topic */
    closeTopic(params) {
        if (this.isGeneralTopic()) {
            throw new TypeError("called `closeTopic` on a General topic; use `closeGeneralTopic` instead");
        }
        return this.bot.api.closeForumTopic({
            chat_id: this.chatId,
            message_thread_id: this.threadId,
            ...params,
        });
    }
    /** Closes General topic */
    closeGeneralTopic(params) {
        return this.bot.api.closeGeneralForumTopic({
            chat_id: this.chatId,
            ...params,
        });
    }
    /** Reopens topic */
    reopenTopic(params) {
        if (this.isGeneralTopic()) {
            throw new TypeError("called `reopenTopic` on a General topic; use `reopenGeneralTopic` instead");
        }
        return this.bot.api.reopenForumTopic({
            chat_id: this.chatId,
            message_thread_id: this.threadId,
            ...params,
        });
    }
    /** Reopens General topic */
    reopenGeneralTopic(params) {
        return this.bot.api.reopenGeneralForumTopic({
            chat_id: this.chatId,
            ...params,
        });
    }
    /** Deletes topic along with all its messages */
    deleteTopic(params) {
        if (this.isGeneralTopic()) {
            throw new TypeError("called `deleteTopic` on a General topic");
        }
        return this.bot.api.deleteForumTopic({
            chat_id: this.chatId,
            message_thread_id: this.threadId,
            ...params,
        });
    }
    /** Clears the list of pinned messages */
    unpinAllTopicMessages(params) {
        if (this.isGeneralTopic()) {
            throw new TypeError("called `unpinAllTopicMessages` on a General topic; use `unpinAllGeneralTopicMessages` instead");
        }
        return this.bot.api.unpinAllForumTopicMessages({
            chat_id: this.chatId,
            message_thread_id: this.threadId,
            ...params,
        });
    }
    /** Clears the list of pinned messages in a General topic */
    unpinAllGeneralTopicMessages(params) {
        return this.bot.api.unpinAllGeneralForumTopicMessages({
            chat_id: this.chatId,
            ...params,
        });
    }
    /** Hides General topic */
    hideGeneralTopic(params) {
        return this.bot.api.hideGeneralForumTopic({
            chat_id: this.chatId,
            ...params,
        });
    }
    /** Unhides General topic */
    unhideGeneralTopic(params) {
        return this.bot.api.unhideGeneralForumTopic({
            chat_id: this.chatId,
            ...params,
        });
    }
}
exports.ForumMixin = ForumMixin;
