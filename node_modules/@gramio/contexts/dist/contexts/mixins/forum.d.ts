import type { TelegramParams } from "@gramio/types";
import type { Optional, RequireValue } from "../../types";
import type { BotLike } from "../../types";
import type { Context } from "../context";
import type { NodeMixin } from "./node";
interface ForumMixinMetadata {
    get threadId(): number | undefined;
}
/** This object represents a mixin that's used in all topic-related updates  */
declare class ForumMixin<Bot extends BotLike> {
    /** Checks whether this topic is actually a 'General' one */
    isGeneralTopic(): this is RequireValue<this, "threadId", undefined>;
    /** Returns custom emoji stickers, which can be used as a forum topic icon by any user */
    getTopicIcons(): Promise<import("@gramio/types").TelegramSticker[]>;
    /** Creates a topic */
    createTopic(name: string, params?: Optional<TelegramParams.CreateForumTopicParams, "chat_id" | "name">): Promise<import("@gramio/types").TelegramForumTopic>;
    /** Edits topic info */
    editTopic(params: Optional<TelegramParams.EditForumTopicParams, "chat_id" | "message_thread_id">): Promise<true>;
    /** Edits General topic info */
    editGeneralTopic(params: Optional<TelegramParams.EditGeneralForumTopicParams, "chat_id">): Promise<true>;
    /** Closes topic */
    closeTopic(params?: Optional<TelegramParams.CloseForumTopicParams, "chat_id" | "message_thread_id">): Promise<true>;
    /** Closes General topic */
    closeGeneralTopic(params?: Optional<TelegramParams.CloseGeneralForumTopicParams, "chat_id">): Promise<true>;
    /** Reopens topic */
    reopenTopic(params?: Optional<TelegramParams.ReopenForumTopicParams, "chat_id" | "message_thread_id">): Promise<true>;
    /** Reopens General topic */
    reopenGeneralTopic(params?: Optional<TelegramParams.ReopenGeneralForumTopicParams, "chat_id">): Promise<true>;
    /** Deletes topic along with all its messages */
    deleteTopic(params?: Optional<TelegramParams.DeleteForumTopicParams, "chat_id" | "message_thread_id">): Promise<true>;
    /** Clears the list of pinned messages */
    unpinAllTopicMessages(params?: Optional<TelegramParams.UnpinAllForumTopicMessagesParams, "chat_id" | "message_thread_id">): Promise<true>;
    /** Clears the list of pinned messages in a General topic */
    unpinAllGeneralTopicMessages(params?: Optional<TelegramParams.UnpinAllGeneralForumTopicMessagesParams, "chat_id">): Promise<true>;
    /** Hides General topic */
    hideGeneralTopic(params?: Optional<TelegramParams.HideGeneralForumTopicParams, "chat_id">): Promise<true>;
    /** Unhides General topic */
    unhideGeneralTopic(params?: Optional<TelegramParams.UnhideGeneralForumTopicParams, "chat_id">): Promise<true>;
}
interface ForumMixin<Bot extends BotLike> extends Context<Bot>, ForumMixinMetadata, NodeMixin<Bot> {
}
export { ForumMixin };
