import type { TelegramParams } from "@gramio/types";
import type { TelegramObjects } from "@gramio/types";
import type { Optional } from "../../types";
import type { Context } from "../context";
import type { BotLike } from "../../types";
import type { NodeMixin } from "./node";
import type { TargetMixin } from "./target";
/** This object represents a mixin that is able to control member's rights */
declare class ChatMemberControlMixin<Bot extends BotLike> {
    /** Bans a user (o_O) */
    banMember(params?: Optional<TelegramParams.BanChatMemberParams, "chat_id" | "user_id">): Promise<true>;
    /** Unbans a user (O_o) */
    unbanMember(params?: Optional<TelegramParams.UnbanChatMemberParams, "chat_id" | "user_id">): Promise<true>;
    /** Restricts a user (O_O) */
    restrictMember(permissions: TelegramObjects.TelegramChatPermissions, params?: Optional<TelegramParams.RestrictChatMemberParams, "chat_id" | "user_id">): Promise<true>;
    /** Promotes/demotes a user (o_o) */
    promoteMember(params?: Optional<TelegramParams.PromoteChatMemberParams, "chat_id" | "user_id">): Promise<true>;
}
interface ChatMemberControlMixin<Bot extends BotLike> extends Context<Bot>, TargetMixin, NodeMixin<Bot> {
}
export { ChatMemberControlMixin };
