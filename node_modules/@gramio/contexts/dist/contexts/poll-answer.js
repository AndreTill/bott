"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PollAnswerContext = void 0;
const inspectable_1 = require("inspectable");
const index_1 = require("../structures/index");
const utils_1 = require("../utils");
const context_1 = require("./context");
const index_2 = require("./mixins/index");
/**
 * This object represents an answer of a user in a non-anonymous poll.
 *
 * [Documentation](https://core.telegram.org/bots/api/#pollanswer)
 */
class PollAnswerContext extends context_1.Context {
    /** The raw data that is used for this Context */
    payload;
    constructor(options) {
        super({
            bot: options.bot,
            updateType: "poll_answer",
            updateId: options.updateId,
            update: options.update,
        });
        this.payload = options.payload;
    }
    /** Checks whether the current answer was non-anonymous and contains `user` field */
    isFromUser() {
        return this.user !== undefined;
    }
    /** Checks if current answer was answered anonymously and the `voterChat` is available */
    isFromChat() {
        return this.voterChat !== undefined;
    }
}
exports.PollAnswerContext = PollAnswerContext;
(0, utils_1.applyMixins)(PollAnswerContext, [
    index_1.PollAnswer,
    index_2.SendMixin,
    index_2.ChatActionMixin,
    index_2.CloneMixin,
]);
(0, inspectable_1.inspectable)(PollAnswerContext, {
    serialize(context) {
        return {
            pollId: context.pollId,
            user: context.user,
            senderId: context.senderId,
            optionIds: context.optionIds,
        };
    },
});
