import type { TelegramObjects } from "@gramio/types";
import { Message, WriteAccessAllowed } from "../structures/index";
import type { Constructor } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, CloneMixin, NodeMixin, PinsMixin, SendMixin, TargetMixin } from "./mixins/index";
interface WriteAccessAllowedContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/**
 * This object represents a service message about a user allowing a bot to write messages after adding it to the attachment menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method [requestWriteAccess](https://core.telegram.org/bots/webapps#initializing-mini-apps).
 *
 * [Documentation](https://core.telegram.org/bots/api/#writeaccessallowed)
 */
declare class WriteAccessAllowedContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    constructor(options: WriteAccessAllowedContextOptions<Bot>);
    /** Service message: user allows a bot to write messages after adding it to the attachment menu */
    get eventAllowance(): WriteAccessAllowed;
}
interface WriteAccessAllowedContext<Bot extends BotLike> extends Constructor<WriteAccessAllowedContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, PinsMixin<Bot>, CloneMixin<Bot, WriteAccessAllowedContext<Bot>, WriteAccessAllowedContextOptions<Bot>> {
}
export { WriteAccessAllowedContext };
