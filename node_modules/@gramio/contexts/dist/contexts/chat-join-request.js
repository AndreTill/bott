"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatJoinRequestContext = void 0;
const inspectable_1 = require("inspectable");
const utils_1 = require("../utils");
const index_1 = require("../structures/index");
const context_1 = require("./context");
const index_2 = require("./mixins/index");
/**
 * Represents a join request sent to a chat.
 *
 * [Documentation](https://core.telegram.org/bots/api/#chatjoinrequest)
 */
class ChatJoinRequestContext extends context_1.Context {
    /** The raw data that is used for this Context */
    payload;
    constructor(options) {
        super({
            bot: options.bot,
            updateType: "chat_join_request",
            updateId: options.updateId,
            update: options.update,
        });
        this.payload = options.payload;
    }
    /** Approves chat join request */
    approve() {
        return this.bot.api.approveChatJoinRequest({
            chat_id: this.chatId,
            user_id: this.userChatId,
        });
    }
    /** Declines chat join request */
    decline() {
        return this.bot.api.declineChatJoinRequest({
            chat_id: this.chatId,
            user_id: this.userChatId,
        });
    }
}
exports.ChatJoinRequestContext = ChatJoinRequestContext;
(0, utils_1.applyMixins)(ChatJoinRequestContext, [
    index_1.ChatJoinRequest,
    index_2.TargetMixin,
    index_2.SendMixin,
    index_2.ChatActionMixin,
    index_2.ChatInviteControlMixin,
    index_2.CloneMixin,
]);
(0, inspectable_1.inspectable)(ChatJoinRequestContext, {
    serialize(context) {
        return {
            chat: context.chat,
            from: context.from,
            date: context.date,
            bio: context.bio,
            inviteLink: context.inviteLink,
        };
    },
});
