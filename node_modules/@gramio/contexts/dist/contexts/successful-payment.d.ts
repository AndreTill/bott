import type { TelegramObjects } from "@gramio/types";
import { Message, SuccessfulPayment } from "../structures/index";
import type { Constructor } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, CloneMixin, NodeMixin, PinsMixin, SendMixin, TargetMixin } from "./mixins/index";
interface SuccessfulPaymentContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/**
 * This object contains basic information about a successful payment.
 *
 * [Documentation](https://core.telegram.org/bots/api/#successfulpayment)
 */
declare class SuccessfulPaymentContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    constructor(options: SuccessfulPaymentContextOptions<Bot>);
    /** Received payment */
    get eventPayment(): SuccessfulPayment;
}
interface SuccessfulPaymentContext<Bot extends BotLike> extends Constructor<SuccessfulPaymentContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, PinsMixin<Bot>, CloneMixin<Bot, SuccessfulPaymentContext<Bot>, SuccessfulPaymentContextOptions<Bot>> {
}
export { SuccessfulPaymentContext };
