"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LeftChatMemberContext = void 0;
const inspectable_1 = require("inspectable");
const index_1 = require("../structures/index");
const utils_1 = require("../utils");
const context_1 = require("./context");
const index_2 = require("./mixins/index");
/** A member was removed from the group, information about them (this member may be the bot itself) */
class LeftChatMemberContext extends context_1.Context {
    /** The raw data that is used for this Context */
    payload;
    constructor(options) {
        super({
            bot: options.bot,
            updateType: "left_chat_member",
            updateId: options.updateId,
            update: options.update,
        });
        this.payload = options.payload;
    }
    /** Left chat member */
    get eventMember() {
        return new index_1.User(this.payload.left_chat_member);
    }
}
exports.LeftChatMemberContext = LeftChatMemberContext;
(0, utils_1.applyMixins)(LeftChatMemberContext, [
    index_1.Message,
    index_2.TargetMixin,
    index_2.SendMixin,
    index_2.ChatActionMixin,
    index_2.NodeMixin,
    index_2.ChatInviteControlMixin,
    index_2.ChatControlMixin,
    index_2.ChatSenderControlMixin,
    index_2.ChatMemberControlMixin,
    index_2.PinsMixin,
    index_2.CloneMixin,
]);
(0, utils_1.memoizeGetters)(LeftChatMemberContext, ["eventMember"]);
(0, inspectable_1.inspectable)(LeftChatMemberContext, {
    serialize(context) {
        return {
            id: context.id,
            createdAt: context.createdAt,
            chat: context.chat,
            chatId: context.chatId,
            chatType: context.chatType,
            eventMember: context.eventMember,
        };
    },
});
