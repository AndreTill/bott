import type { TelegramObjects } from "@gramio/types";
import { Message } from "../structures/index";
import type { Constructor } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, CloneMixin, NodeMixin, SendMixin, TargetMixin } from "./mixins/index";
interface WebAppDataContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/**
 * Describes data sent from a [Web App](https://core.telegram.org/bots/webapps) to the bot.
 *
 * [Documentation](https://core.telegram.org/bots/api/#webappdata)
 */
declare class WebAppDataContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    constructor(options: WebAppDataContextOptions<Bot>);
    /** The data. Be aware that a bad client can send arbitrary data in this field. */
    get data(): string;
    /**
     * Text of the `web_app` keyboard button, from which the Web App was opened.
     * Be aware that a bad client can send arbitrary data in this field.
     */
    get buttonText(): string;
}
interface WebAppDataContext<Bot extends BotLike> extends Constructor<WebAppDataContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, CloneMixin<Bot, WebAppDataContext<Bot>, WebAppDataContextOptions<Bot>> {
}
export { WebAppDataContext };
