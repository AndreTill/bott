import type { TelegramObjects } from "@gramio/types";
import { PollAnswer } from "../structures/index";
import type { Constructor, Require } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, CloneMixin, SendMixin } from "./mixins/index";
interface PollAnswerContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramPollAnswer;
    updateId: number;
}
/**
 * This object represents an answer of a user in a non-anonymous poll.
 *
 * [Documentation](https://core.telegram.org/bots/api/#pollanswer)
 */
declare class PollAnswerContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramPollAnswer;
    constructor(options: PollAnswerContextOptions<Bot>);
    /** Checks whether the current answer was non-anonymous and contains `user` field */
    isFromUser(): this is Require<this, "user">;
    /** Checks if current answer was answered anonymously and the `voterChat` is available */
    isFromChat(): this is Require<this, "voterChat">;
}
interface PollAnswerContext<Bot extends BotLike> extends Constructor<PollAnswerContext<Bot>>, PollAnswer, SendMixin<Bot>, ChatActionMixin<Bot>, CloneMixin<Bot, PollAnswerContext<Bot>, PollAnswerContextOptions<Bot>> {
}
export { PollAnswerContext };
