import type { TelegramObjects } from "@gramio/types";
import { Message, VideoChatParticipantsInvited } from "../structures/index";
import type { Constructor } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, ChatControlMixin, ChatInviteControlMixin, ChatMemberControlMixin, ChatSenderControlMixin, CloneMixin, NodeMixin, PinsMixin, SendMixin, TargetMixin } from "./mixins/index";
interface VideoChatParticipantsInvitedContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/**
 * This object represents a service message about new members invited to a video chat.
 *
 * [Documentation](https://core.telegram.org/bots/api/#videochatparticipantsinvited)
 */
declare class VideoChatParticipantsInvitedContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    constructor(options: VideoChatParticipantsInvitedContextOptions<Bot>);
    /** Service message: new participants invited to a video chat */
    get eventParticipantsInvited(): VideoChatParticipantsInvited;
}
interface VideoChatParticipantsInvitedContext<Bot extends BotLike> extends Constructor<VideoChatParticipantsInvitedContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, ChatInviteControlMixin<Bot>, ChatControlMixin<Bot>, ChatSenderControlMixin<Bot>, ChatMemberControlMixin<Bot>, PinsMixin<Bot>, CloneMixin<Bot, VideoChatParticipantsInvitedContext<Bot>, VideoChatParticipantsInvitedContextOptions<Bot>> {
}
export { VideoChatParticipantsInvitedContext };
