import type { TelegramObjects } from "@gramio/types";
import { Message } from "../structures/index";
import type { Constructor, Require } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, ChatControlMixin, ChatInviteControlMixin, ChatMemberControlMixin, ChatSenderControlMixin, CloneMixin, ForumMixin, NodeMixin, PinsMixin, SendMixin, TargetMixin } from "./mixins/index";
interface ForumTopicEditedContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/** This object represents a service message about an edited forum topic. */
declare class ForumTopicEditedContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    private event;
    constructor(options: ForumTopicEditedContextOptions<Bot>);
    /** New name of the topic, if it was edited */
    get name(): string | undefined;
    /** Checks whether the `name` property has been edited */
    hasName(): this is Require<this, "name">;
    /** New identifier of the custom emoji shown as the topic icon, if it was edited; an empty string if the icon was removed */
    get iconCustomEmojiId(): string | undefined;
    /** Checks whether the `iconCustomEmojiId` property has been edited */
    hasIconCustomEmojiId(): this is Require<this, "iconCustomEmojiId">;
}
interface ForumTopicEditedContext<Bot extends BotLike> extends Constructor<ForumTopicEditedContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, ForumMixin<Bot>, ChatInviteControlMixin<Bot>, ChatControlMixin<Bot>, ChatSenderControlMixin<Bot>, ChatMemberControlMixin<Bot>, PinsMixin<Bot>, CloneMixin<Bot, ForumTopicEditedContext<Bot>, ForumTopicEditedContextOptions<Bot>> {
}
export { ForumTopicEditedContext };
