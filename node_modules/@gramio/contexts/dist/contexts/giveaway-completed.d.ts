import type { TelegramObjects } from "@gramio/types";
import { Message } from "../structures/message";
import type { BotLike } from "../types";
import type { Constructor } from "../types";
import { Context } from "./context";
import { ChatActionMixin, ChatControlMixin, ChatInviteControlMixin, ChatMemberControlMixin, ChatSenderControlMixin, CloneMixin, ForumMixin, NodeMixin, PinsMixin, SendMixin, TargetMixin } from "./mixins/index";
interface GiveawayCompletedContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/** This object represents a service message about the creation of a scheduled giveaway. Currently holds no information. */
declare class GiveawayCompletedContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    constructor(options: GiveawayCompletedContextOptions<Bot>);
    /** Giveaway completed */
    get eventGiveaway(): import("..").GiveawayCompleted;
}
interface GiveawayCompletedContext<Bot extends BotLike> extends Constructor<GiveawayCompletedContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, ForumMixin<Bot>, ChatInviteControlMixin<Bot>, ChatControlMixin<Bot>, ChatSenderControlMixin<Bot>, ChatMemberControlMixin<Bot>, PinsMixin<Bot>, CloneMixin<Bot, GiveawayCompletedContext<Bot>, GiveawayCompletedContextOptions<Bot>> {
}
export { GiveawayCompletedContext };
