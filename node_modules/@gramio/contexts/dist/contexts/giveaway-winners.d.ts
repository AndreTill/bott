import type { TelegramObjects } from "@gramio/types";
import { Message } from "../structures/message";
import type { BotLike } from "../types";
import type { Constructor } from "../types";
import { Context } from "./context";
import { ChatActionMixin, ChatControlMixin, ChatInviteControlMixin, ChatMemberControlMixin, ChatSenderControlMixin, CloneMixin, ForumMixin, NodeMixin, PinsMixin, SendMixin, TargetMixin } from "./mixins/index";
interface GiveawayWinnersContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/** This object represents a message about the completion of a giveaway with public winners. */
declare class GiveawayWinnersContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    constructor(options: GiveawayWinnersContextOptions<Bot>);
    /** Giveaway winners */
    get eventGiveaway(): import("..").GiveawayWinners;
}
interface GiveawayWinnersContext<Bot extends BotLike> extends Constructor<GiveawayWinnersContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, ForumMixin<Bot>, ChatInviteControlMixin<Bot>, ChatControlMixin<Bot>, ChatSenderControlMixin<Bot>, ChatMemberControlMixin<Bot>, PinsMixin<Bot>, CloneMixin<Bot, GiveawayWinnersContext<Bot>, GiveawayWinnersContextOptions<Bot>> {
}
export { GiveawayWinnersContext };
