"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MigrateToChatIdContext = void 0;
const inspectable_1 = require("inspectable");
const index_1 = require("../structures/index");
const utils_1 = require("../utils");
const context_1 = require("./context");
const index_2 = require("./mixins/index");
/** The group has been migrated to a supergroup with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier. */
class MigrateToChatIdContext extends context_1.Context {
    /** The raw data that is used for this Context */
    payload;
    constructor(options) {
        super({
            bot: options.bot,
            updateType: "migrate_to_chat_id",
            updateId: options.updateId,
            update: options.update,
        });
        this.payload = options.payload;
    }
    /** Chat ID */
    get eventId() {
        return this.payload.migrate_to_chat_id;
    }
}
exports.MigrateToChatIdContext = MigrateToChatIdContext;
(0, utils_1.applyMixins)(MigrateToChatIdContext, [
    index_1.Message,
    index_2.TargetMixin,
    index_2.SendMixin,
    index_2.ChatActionMixin,
    index_2.NodeMixin,
    index_2.PinsMixin,
    index_2.ChatInviteControlMixin,
    index_2.CloneMixin,
]);
(0, inspectable_1.inspectable)(MigrateToChatIdContext, {
    serialize(context) {
        return {
            id: context.id,
            from: context.from,
            senderId: context.senderId,
            createdAt: context.createdAt,
            chat: context.chat,
            chatId: context.chatId,
            chatType: context.chatType,
            eventId: context.eventId,
        };
    },
});
