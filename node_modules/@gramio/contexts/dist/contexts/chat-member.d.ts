import type { TelegramObjects } from "@gramio/types";
import { ChatMemberUpdated } from "../structures/index";
import type { Constructor, Require, UpdateName } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, ChatControlMixin, CloneMixin, SendMixin, TargetMixin } from "./mixins/index";
interface ChatMemberContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramChatMemberUpdated;
    updateId: number;
    type?: UpdateName;
}
/**
 * This object represents changes in the status of a chat member.
 *
 * [Documentation](https://core.telegram.org/bots/api/#chatmemberupdated)
 */
declare class ChatMemberContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramChatMemberUpdated;
    constructor(options: ChatMemberContextOptions<Bot>);
    /** Does this update have `invite_link` property? */
    hasInviteLink(): this is Require<this, "inviteLink">;
}
interface ChatMemberContext<Bot extends BotLike> extends Constructor<ChatMemberContext<Bot>>, ChatMemberUpdated, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, ChatControlMixin<Bot>, CloneMixin<Bot, ChatMemberContext<Bot>, ChatMemberContextOptions<Bot>> {
}
export { ChatMemberContext };
