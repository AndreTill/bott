import type { TelegramObjects } from "@gramio/types";
import { Invoice, Message } from "../structures/index";
import type { Constructor } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, CloneMixin, NodeMixin, PinsMixin, SendMixin, TargetMixin } from "./mixins/index";
interface InvoiceContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/**
 * Message is an invoice for a [payment](https://core.telegram.org/bots/api/#payments), information about the invoice. [More about payments Â»](https://core.telegram.org/bots/api/#payments)
 *
 * [Documentation](https://core.telegram.org/bots/api/#invoice)
 */
declare class InvoiceContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    constructor(options: InvoiceContextOptions<Bot>);
    /** Invoice */
    get eventInvoice(): Invoice;
}
interface InvoiceContext<Bot extends BotLike> extends Constructor<InvoiceContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, PinsMixin<Bot>, CloneMixin<Bot, InvoiceContext<Bot>, InvoiceContextOptions<Bot>> {
}
export { InvoiceContext };
