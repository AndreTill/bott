"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatMemberContext = void 0;
const inspectable_1 = require("inspectable");
const index_1 = require("../structures/index");
const utils_1 = require("../utils");
const context_1 = require("./context");
const index_2 = require("./mixins/index");
/**
 * This object represents changes in the status of a chat member.
 *
 * [Documentation](https://core.telegram.org/bots/api/#chatmemberupdated)
 */
class ChatMemberContext extends context_1.Context {
    /** The raw data that is used for this Context */
    payload;
    constructor(options) {
        super({
            bot: options.bot,
            updateType: options.type ?? "chat_member",
            updateId: options.updateId,
            update: options.update,
        });
        this.payload = options.payload;
    }
    /** Does this update have `invite_link` property? */
    hasInviteLink() {
        return this.inviteLink !== undefined;
    }
}
exports.ChatMemberContext = ChatMemberContext;
(0, utils_1.applyMixins)(ChatMemberContext, [
    index_1.ChatMemberUpdated,
    index_2.TargetMixin,
    index_2.SendMixin,
    index_2.ChatActionMixin,
    index_2.ChatControlMixin,
    index_2.CloneMixin,
]);
(0, inspectable_1.inspectable)(ChatMemberContext, {
    serialize(context) {
        return {
            senderId: context.senderId,
            chatId: context.chatId,
            chatType: context.chatType,
            oldChatMember: context.oldChatMember,
            newChatMember: context.newChatMember,
            date: context.date,
            inviteLink: context.inviteLink,
        };
    },
});
