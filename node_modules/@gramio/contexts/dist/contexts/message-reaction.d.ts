import type { TelegramObjects } from "@gramio/types";
import { MessageReactionUpdated } from "../structures/message-reaction-updated";
import type { Constructor, Require } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { CloneMixin, NodeMixin, SendMixin } from "./mixins/index";
interface MessageReactionContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessageReactionUpdated;
    updateId: number;
}
/** This object represents a change of a reaction on a message performed by a user. */
declare class MessageReactionContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessageReactionUpdated;
    constructor(options: MessageReactionContextOptions<Bot>);
    /** Checks if context has the `user` property */
    hasUser(): this is Require<this, "user">;
    /** Checks if context has the `actorChat` property */
    hasActorChat(): this is Require<this, "actorChat">;
}
interface MessageReactionContext<Bot extends BotLike> extends Constructor<MessageReactionContext<Bot>>, MessageReactionUpdated, SendMixin<Bot>, NodeMixin<Bot>, CloneMixin<Bot, MessageReactionContext<Bot>, MessageReactionContextOptions<Bot>> {
}
export { MessageReactionContext };
