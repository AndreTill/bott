import type { TelegramObjects } from "@gramio/types";
import { Message, PhotoSize } from "../structures/index";
import type { Constructor } from "../types";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, ChatControlMixin, ChatInviteControlMixin, ChatMemberControlMixin, ChatSenderControlMixin, CloneMixin, NodeMixin, PinsMixin, SendMixin, TargetMixin } from "./mixins/index";
interface NewChatPhotoContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/** A chat photo was change to this value */
declare class NewChatPhotoContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    constructor(options: NewChatPhotoContextOptions<Bot>);
    /** New chat photo */
    get eventPhoto(): PhotoSize[];
}
interface NewChatPhotoContext<Bot extends BotLike> extends Constructor<NewChatPhotoContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, ChatInviteControlMixin<Bot>, ChatControlMixin<Bot>, ChatSenderControlMixin<Bot>, ChatMemberControlMixin<Bot>, PinsMixin<Bot>, CloneMixin<Bot, NewChatPhotoContext<Bot>, NewChatPhotoContextOptions<Bot>> {
}
export { NewChatPhotoContext };
