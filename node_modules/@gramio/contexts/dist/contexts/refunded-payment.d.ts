import type { TelegramObjects } from "@gramio/types";
import { Message } from "../structures/index";
import type { Constructor } from "../types";
import { RefundedPayment } from "../structures/refunded-payment";
import type { BotLike } from "../types";
import { Context } from "./context";
import { ChatActionMixin, CloneMixin, NodeMixin, PinsMixin, SendMixin, TargetMixin } from "./mixins/index";
interface RefundedPaymentContextOptions<Bot extends BotLike> {
    bot: Bot;
    update: TelegramObjects.TelegramUpdate;
    payload: TelegramObjects.TelegramMessage;
    updateId: number;
}
/**
 * This object contains basic information about a successful payment.
 *
 * [Documentation](https://core.telegram.org/bots/api/#RefundedPayment)
 */
declare class RefundedPaymentContext<Bot extends BotLike> extends Context<Bot> {
    /** The raw data that is used for this Context */
    payload: TelegramObjects.TelegramMessage;
    constructor(options: RefundedPaymentContextOptions<Bot>);
    /**
     * This object contains basic information about a refunded payment.
     *
     * [Documentation](https://core.telegram.org/bots/api/#refundedpayment)
     */
    get eventRefundedPayment(): RefundedPayment;
}
interface RefundedPaymentContext<Bot extends BotLike> extends Constructor<RefundedPaymentContext<Bot>>, Message, TargetMixin, SendMixin<Bot>, ChatActionMixin<Bot>, NodeMixin<Bot>, PinsMixin<Bot>, CloneMixin<Bot, RefundedPaymentContext<Bot>, RefundedPaymentContextOptions<Bot>> {
}
export { RefundedPaymentContext };
