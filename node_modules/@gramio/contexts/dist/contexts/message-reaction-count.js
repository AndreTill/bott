"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageReactionCountContext = void 0;
const inspectable_1 = require("inspectable");
const message_reaction_count_updated_1 = require("../structures/message-reaction-count-updated");
const utils_1 = require("../utils");
const context_1 = require("./context");
const index_1 = require("./mixins/index");
/** This object represents reaction changes on a message with anonymous reactions. */
class MessageReactionCountContext extends context_1.Context {
    /** The raw data that is used for this Context */
    payload;
    constructor(options) {
        super({
            bot: options.bot,
            updateType: "message_reaction_count",
            updateId: options.updateId,
            update: options.update,
        });
        this.payload = options.payload;
    }
}
exports.MessageReactionCountContext = MessageReactionCountContext;
(0, utils_1.applyMixins)(MessageReactionCountContext, [
    message_reaction_count_updated_1.MessageReactionCountUpdated,
    index_1.SendMixin,
    index_1.NodeMixin,
    index_1.CloneMixin,
]);
(0, inspectable_1.inspectable)(MessageReactionCountContext, {
    // biome-ignore lint/suspicious/noExplicitAny: <explanation>
    serialize(context) {
        const payload = {
            id: context.id,
            chat: context.chat,
            date: context.date,
            reactions: context.reactions,
        };
        return payload;
    },
});
