"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.User = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
/** This object represents a Telegram user or bot. */
let User = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_id_decorators;
    let _get_firstName_decorators;
    let _get_lastName_decorators;
    let _get_username_decorators;
    let _get_languageCode_decorators;
    let _isPremium_decorators;
    let _get_addedToAttachmentMenu_decorators;
    let _canJoinGroups_decorators;
    let _canReadAllGroupMessages_decorators;
    let _supportsInlineQueries_decorators;
    let _canConnectToBusiness_decorators;
    var User = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_id_decorators = [(0, inspectable_1.Inspect)()];
            _get_firstName_decorators = [(0, inspectable_1.Inspect)()];
            _get_lastName_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_username_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_languageCode_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _isPremium_decorators = [(0, inspectable_1.Inspect)({ compute: true, nullable: false })];
            _get_addedToAttachmentMenu_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _canJoinGroups_decorators = [(0, inspectable_1.Inspect)({ compute: true, nullable: false })];
            _canReadAllGroupMessages_decorators = [(0, inspectable_1.Inspect)({ compute: true, nullable: false })];
            _supportsInlineQueries_decorators = [(0, inspectable_1.Inspect)({ compute: true, nullable: false })];
            _canConnectToBusiness_decorators = [(0, inspectable_1.Inspect)({ compute: true, nullable: false })];
            tslib_1.__esDecorate(this, null, _get_id_decorators, { kind: "getter", name: "id", static: false, private: false, access: { has: obj => "id" in obj, get: obj => obj.id }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_firstName_decorators, { kind: "getter", name: "firstName", static: false, private: false, access: { has: obj => "firstName" in obj, get: obj => obj.firstName }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_lastName_decorators, { kind: "getter", name: "lastName", static: false, private: false, access: { has: obj => "lastName" in obj, get: obj => obj.lastName }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_username_decorators, { kind: "getter", name: "username", static: false, private: false, access: { has: obj => "username" in obj, get: obj => obj.username }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_languageCode_decorators, { kind: "getter", name: "languageCode", static: false, private: false, access: { has: obj => "languageCode" in obj, get: obj => obj.languageCode }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _isPremium_decorators, { kind: "method", name: "isPremium", static: false, private: false, access: { has: obj => "isPremium" in obj, get: obj => obj.isPremium }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_addedToAttachmentMenu_decorators, { kind: "getter", name: "addedToAttachmentMenu", static: false, private: false, access: { has: obj => "addedToAttachmentMenu" in obj, get: obj => obj.addedToAttachmentMenu }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _canJoinGroups_decorators, { kind: "method", name: "canJoinGroups", static: false, private: false, access: { has: obj => "canJoinGroups" in obj, get: obj => obj.canJoinGroups }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _canReadAllGroupMessages_decorators, { kind: "method", name: "canReadAllGroupMessages", static: false, private: false, access: { has: obj => "canReadAllGroupMessages" in obj, get: obj => obj.canReadAllGroupMessages }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _supportsInlineQueries_decorators, { kind: "method", name: "supportsInlineQueries", static: false, private: false, access: { has: obj => "supportsInlineQueries" in obj, get: obj => obj.supportsInlineQueries }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _canConnectToBusiness_decorators, { kind: "method", name: "canConnectToBusiness", static: false, private: false, access: { has: obj => "canConnectToBusiness" in obj, get: obj => obj.canConnectToBusiness }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            User = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /** Unique identifier for this user or bot */
        get id() {
            return Number(this.payload.id);
        }
        /** `true`, if this user is a bot */
        isBot() {
            return this.payload.is_bot;
        }
        /** User's or bot's first name */
        get firstName() {
            return this.payload.first_name;
        }
        /** User's or bot's last name */
        get lastName() {
            return this.payload.last_name;
        }
        /** User's or bot's username */
        get username() {
            return this.payload.username;
        }
        /**
         * [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag)
         * of the user's language
         */
        get languageCode() {
            return this.payload.language_code;
        }
        /** `true`, if this user is a Telegram Premium user */
        isPremium() {
            return this.payload.is_premium;
        }
        /** `true`, if this user added the bot to the attachment menu */
        get addedToAttachmentMenu() {
            return this.payload.added_to_attachment_menu;
        }
        /**
         * `true`, if the bot can be invited to groups.
         *
         * Returned only in `getMe`.
         */
        canJoinGroups() {
            return this.payload.can_join_groups;
        }
        /**
         * `true`, if privacy mode is disabled for the bot.
         *
         * Returned only in `getMe`.
         */
        canReadAllGroupMessages() {
            return this.payload.can_read_all_group_messages;
        }
        /**
         * `true`, if the bot supports inline queries.
         *
         * Returned only in `getMe`.
         */
        supportsInlineQueries() {
            return this.payload.supports_inline_queries;
        }
        /**
         * `true`, if the bot can be connected to a Telegram Business account to receive its messages.
         *
         * Returned only in `getMe`.
         */
        canConnectToBusiness() {
            return this.payload.can_connect_to_business;
        }
    };
    return User = _classThis;
})();
exports.User = User;
