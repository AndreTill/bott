"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Game = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const index_1 = require("./attachments/index");
const utils_1 = require("../utils");
const message_entity_1 = require("./message-entity");
const photo_size_1 = require("./photo-size");
/** This object represents a game. */
let Game = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_title_decorators;
    let _get_description_decorators;
    let _get_photo_decorators;
    let _get_text_decorators;
    let _get_textEntities_decorators;
    let _get_animation_decorators;
    var Game = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_title_decorators = [(0, inspectable_1.Inspect)()];
            _get_description_decorators = [(0, inspectable_1.Inspect)()];
            _get_photo_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_text_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_textEntities_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_animation_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            tslib_1.__esDecorate(this, null, _get_title_decorators, { kind: "getter", name: "title", static: false, private: false, access: { has: obj => "title" in obj, get: obj => obj.title }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_description_decorators, { kind: "getter", name: "description", static: false, private: false, access: { has: obj => "description" in obj, get: obj => obj.description }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_photo_decorators, { kind: "getter", name: "photo", static: false, private: false, access: { has: obj => "photo" in obj, get: obj => obj.photo }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_text_decorators, { kind: "getter", name: "text", static: false, private: false, access: { has: obj => "text" in obj, get: obj => obj.text }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_textEntities_decorators, { kind: "getter", name: "textEntities", static: false, private: false, access: { has: obj => "textEntities" in obj, get: obj => obj.textEntities }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_animation_decorators, { kind: "getter", name: "animation", static: false, private: false, access: { has: obj => "animation" in obj, get: obj => obj.animation }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            Game = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /** Title of the game */
        get title() {
            return this.payload.title;
        }
        /** Description of the game */
        get description() {
            return this.payload.description;
        }
        /** Photo that will be displayed in the game message in chats. */
        get photo() {
            const { photo } = this.payload;
            if (!photo)
                return undefined;
            return photo.map((element) => new photo_size_1.PhotoSize(element));
        }
        /**
         * Brief description of the game or high scores included in the game message
         * Can be automatically edited to include current high scores for the game
         * when the bot calls `setGameScore`, or manually edited using
         * `editMessageText`. 0-4096 characters.
         */
        get text() {
            return this.payload.text;
        }
        /**
         * Special entities that appear in text, such as usernames, URLs, bot
         * commands, etc.
         */
        get textEntities() {
            const { text_entities } = this.payload;
            if (!text_entities)
                return undefined;
            return text_entities.map((entity) => new message_entity_1.MessageEntity(entity));
        }
        /**
         * Animation that will be displayed in the game message in chats.
         * Upload via BotFather
         */
        get animation() {
            const { animation } = this.payload;
            if (!animation)
                return undefined;
            return new index_1.AnimationAttachment(animation);
        }
    };
    return Game = _classThis;
})();
exports.Game = Game;
(0, utils_1.memoizeGetters)(Game, ["textEntities", "animation"]);
