"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatMemberUpdated = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const utils_1 = require("../utils");
const chat_1 = require("./chat");
const chat_invite_link_1 = require("./chat-invite-link");
const chat_member_1 = require("./chat-member");
const user_1 = require("./user");
/**
 * This object represents changes in the status of a chat member.
 *
 * [Documentation](https://core.telegram.org/bots/api/#chatmemberupdated)
 */
let ChatMemberUpdated = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_chat_decorators;
    let _get_from_decorators;
    let _get_date_decorators;
    let _get_oldChatMember_decorators;
    let _get_newChatMember_decorators;
    let _get_inviteLink_decorators;
    let _get_viaJoinRequest_decorators;
    let _get_viaChatFolderInviteLink_decorators;
    var ChatMemberUpdated = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_chat_decorators = [(0, inspectable_1.Inspect)()];
            _get_from_decorators = [(0, inspectable_1.Inspect)()];
            _get_date_decorators = [(0, inspectable_1.Inspect)()];
            _get_oldChatMember_decorators = [(0, inspectable_1.Inspect)()];
            _get_newChatMember_decorators = [(0, inspectable_1.Inspect)()];
            _get_inviteLink_decorators = [(0, inspectable_1.Inspect)()];
            _get_viaJoinRequest_decorators = [(0, inspectable_1.Inspect)()];
            _get_viaChatFolderInviteLink_decorators = [(0, inspectable_1.Inspect)()];
            tslib_1.__esDecorate(this, null, _get_chat_decorators, { kind: "getter", name: "chat", static: false, private: false, access: { has: obj => "chat" in obj, get: obj => obj.chat }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_from_decorators, { kind: "getter", name: "from", static: false, private: false, access: { has: obj => "from" in obj, get: obj => obj.from }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_date_decorators, { kind: "getter", name: "date", static: false, private: false, access: { has: obj => "date" in obj, get: obj => obj.date }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_oldChatMember_decorators, { kind: "getter", name: "oldChatMember", static: false, private: false, access: { has: obj => "oldChatMember" in obj, get: obj => obj.oldChatMember }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_newChatMember_decorators, { kind: "getter", name: "newChatMember", static: false, private: false, access: { has: obj => "newChatMember" in obj, get: obj => obj.newChatMember }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_inviteLink_decorators, { kind: "getter", name: "inviteLink", static: false, private: false, access: { has: obj => "inviteLink" in obj, get: obj => obj.inviteLink }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_viaJoinRequest_decorators, { kind: "getter", name: "viaJoinRequest", static: false, private: false, access: { has: obj => "viaJoinRequest" in obj, get: obj => obj.viaJoinRequest }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_viaChatFolderInviteLink_decorators, { kind: "getter", name: "viaChatFolderInviteLink", static: false, private: false, access: { has: obj => "viaChatFolderInviteLink" in obj, get: obj => obj.viaChatFolderInviteLink }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            ChatMemberUpdated = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /**
         * Chat the user belongs to
         */
        get chat() {
            return new chat_1.Chat(this.payload.chat);
        }
        /**
         * Performer of the action, which resulted in the change
         */
        get from() {
            return new user_1.User(this.payload.from);
        }
        /**
         * Date the change was done in Unix time
         */
        get date() {
            return this.payload.date;
        }
        /**
         * Previous information about the chat member
         */
        get oldChatMember() {
            return new chat_member_1.ChatMember(this.payload.old_chat_member);
        }
        /**
         * New information about the chat member
         */
        get newChatMember() {
            return new chat_member_1.ChatMember(this.payload.new_chat_member);
        }
        /**
         * *Optional*. Chat invite link, which was used by the user to join the chat; for joining by invite link events only.
         */
        get inviteLink() {
            return this.payload.invite_link
                ? new chat_invite_link_1.ChatInviteLink(this.payload.invite_link)
                : undefined;
        }
        /**
         * *Optional*. True, if the user joined the chat after sending a direct join request and being approved by an administrator
         */
        get viaJoinRequest() {
            return this.payload.via_join_request;
        }
        /**
         * *Optional*. True, if the user joined the chat via a chat folder invite link
         */
        get viaChatFolderInviteLink() {
            return this.payload.via_chat_folder_invite_link;
        }
    };
    return ChatMemberUpdated = _classThis;
})();
exports.ChatMemberUpdated = ChatMemberUpdated;
(0, utils_1.memoizeGetters)(ChatMemberUpdated, [
    "chat",
    "from",
    "oldChatMember",
    "newChatMember",
    "inviteLink",
]);
