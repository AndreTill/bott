"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Invoice = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
/** This object contains basic information about an invoice. */
let Invoice = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_title_decorators;
    let _get_description_decorators;
    let _get_startParameter_decorators;
    let _get_currency_decorators;
    let _get_totalAmount_decorators;
    var Invoice = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_title_decorators = [(0, inspectable_1.Inspect)()];
            _get_description_decorators = [(0, inspectable_1.Inspect)()];
            _get_startParameter_decorators = [(0, inspectable_1.Inspect)()];
            _get_currency_decorators = [(0, inspectable_1.Inspect)()];
            _get_totalAmount_decorators = [(0, inspectable_1.Inspect)()];
            tslib_1.__esDecorate(this, null, _get_title_decorators, { kind: "getter", name: "title", static: false, private: false, access: { has: obj => "title" in obj, get: obj => obj.title }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_description_decorators, { kind: "getter", name: "description", static: false, private: false, access: { has: obj => "description" in obj, get: obj => obj.description }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_startParameter_decorators, { kind: "getter", name: "startParameter", static: false, private: false, access: { has: obj => "startParameter" in obj, get: obj => obj.startParameter }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_currency_decorators, { kind: "getter", name: "currency", static: false, private: false, access: { has: obj => "currency" in obj, get: obj => obj.currency }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_totalAmount_decorators, { kind: "getter", name: "totalAmount", static: false, private: false, access: { has: obj => "totalAmount" in obj, get: obj => obj.totalAmount }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            Invoice = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /** Product name */
        get title() {
            return this.payload.title;
        }
        /** Product description */
        get description() {
            return this.payload.description;
        }
        /**
         * Unique bot deep-linking parameter that can be used to generate this
         * invoice
         */
        get startParameter() {
            return this.payload.start_parameter;
        }
        /** Three-letter ISO 4217 currency code */
        get currency() {
            return this.payload.currency;
        }
        /**
         * Total price in the smallest units of the currency
         * (integer, not float/double). For example, for a price of
         * `US$ 1.45` pass `amount = 145`. See the `exp` parameter in
         * [currencies.json](https://core.telegram.org/bots/payments/currencies.json),
         * it shows the number of digits past the decimal point for each currency
         * (2 for the majority of currencies).
         */
        get totalAmount() {
            return this.payload.total_amount;
        }
    };
    return Invoice = _classThis;
})();
exports.Invoice = Invoice;
