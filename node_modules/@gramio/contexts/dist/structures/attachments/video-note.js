"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VideoNoteAttachment = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const photo_size_1 = require("../photo-size");
const utils_1 = require("../../utils");
const file_attachment_1 = require("./file-attachment");
/** This object represents a video message. */
// TODO: extended: ['fileId', 'fileUniqueId']
let VideoNoteAttachment = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _classSuper = file_attachment_1.FileAttachment;
    let _instanceExtraInitializers = [];
    let _get_length_decorators;
    let _get_duration_decorators;
    let _get_thumbnail_decorators;
    let _get_fileSize_decorators;
    var VideoNoteAttachment = class extends _classSuper {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;
            _get_length_decorators = [(0, inspectable_1.Inspect)()];
            _get_duration_decorators = [(0, inspectable_1.Inspect)()];
            _get_thumbnail_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_fileSize_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            tslib_1.__esDecorate(this, null, _get_length_decorators, { kind: "getter", name: "length", static: false, private: false, access: { has: obj => "length" in obj, get: obj => obj.length }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_duration_decorators, { kind: "getter", name: "duration", static: false, private: false, access: { has: obj => "duration" in obj, get: obj => obj.duration }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_thumbnail_decorators, { kind: "getter", name: "thumbnail", static: false, private: false, access: { has: obj => "thumbnail" in obj, get: obj => obj.thumbnail }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_fileSize_decorators, { kind: "getter", name: "fileSize", static: false, private: false, access: { has: obj => "fileSize" in obj, get: obj => obj.fileSize }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            VideoNoteAttachment = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        attachmentType = (tslib_1.__runInitializers(this, _instanceExtraInitializers), "video_note");
        /**
         * Video width and height (diameter of the video message) as defined by
         * sender
         */
        get length() {
            return this.payload.length;
        }
        /** Duration of the video in seconds as defined by sender */
        get duration() {
            return this.payload.duration;
        }
        /** Video thumbnail */
        get thumbnail() {
            const { thumbnail } = this.payload;
            if (!thumbnail)
                return undefined;
            return new photo_size_1.PhotoSize(thumbnail);
        }
        /** File size */
        get fileSize() {
            return this.payload.file_size;
        }
    };
    return VideoNoteAttachment = _classThis;
})();
exports.VideoNoteAttachment = VideoNoteAttachment;
(0, utils_1.memoizeGetters)(VideoNoteAttachment, ["thumbnail"]);
