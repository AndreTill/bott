"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GiveawayCompleted = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const utils_1 = require("../utils");
const message_1 = require("./message");
/** This object represents a service message about the completion of a giveaway without public winners. */
let GiveawayCompleted = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_winnerCount_decorators;
    let _get_unclaimedPrizeCount_decorators;
    let _get_message_decorators;
    var GiveawayCompleted = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_winnerCount_decorators = [(0, inspectable_1.Inspect)()];
            _get_unclaimedPrizeCount_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_message_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            tslib_1.__esDecorate(this, null, _get_winnerCount_decorators, { kind: "getter", name: "winnerCount", static: false, private: false, access: { has: obj => "winnerCount" in obj, get: obj => obj.winnerCount }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_unclaimedPrizeCount_decorators, { kind: "getter", name: "unclaimedPrizeCount", static: false, private: false, access: { has: obj => "unclaimedPrizeCount" in obj, get: obj => obj.unclaimedPrizeCount }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_message_decorators, { kind: "getter", name: "message", static: false, private: false, access: { has: obj => "message" in obj, get: obj => obj.message }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            GiveawayCompleted = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /** Number of winners in the giveaway */
        get winnerCount() {
            return this.payload.winner_count;
        }
        /** Number of undistributed prizes */
        get unclaimedPrizeCount() {
            return this.payload.unclaimed_prize_count;
        }
        /** Message with the giveaway that was completed, if it wasn't deleted */
        get message() {
            const { giveaway_message } = this.payload;
            if (!giveaway_message)
                return undefined;
            return new message_1.Message(giveaway_message);
        }
    };
    return GiveawayCompleted = _classThis;
})();
exports.GiveawayCompleted = GiveawayCompleted;
(0, utils_1.memoizeGetters)(GiveawayCompleted, ["message"]);
