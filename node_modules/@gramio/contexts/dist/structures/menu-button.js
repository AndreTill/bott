"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuButton = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const utils_1 = require("../utils");
const web_app_info_1 = require("./web-app-info");
/** This object describes the bot's menu button in a private chat. */
let MenuButton = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_type_decorators;
    let _get_text_decorators;
    let _get_webApp_decorators;
    var MenuButton = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_type_decorators = [(0, inspectable_1.Inspect)()];
            _get_text_decorators = [(0, inspectable_1.Inspect)()];
            _get_webApp_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            tslib_1.__esDecorate(this, null, _get_type_decorators, { kind: "getter", name: "type", static: false, private: false, access: { has: obj => "type" in obj, get: obj => obj.type }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_text_decorators, { kind: "getter", name: "text", static: false, private: false, access: { has: obj => "text" in obj, get: obj => obj.text }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_webApp_decorators, { kind: "getter", name: "webApp", static: false, private: false, access: { has: obj => "webApp" in obj, get: obj => obj.webApp }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            MenuButton = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /** Type of the button */
        get type() {
            return this.payload.type;
        }
        /** Text on the button */
        get text() {
            return this.payload.text;
        }
        /**
         * Description of the Web App that will be launched when the user presses the button.
         * The Web App will be able to send an arbitrary message on behalf of the user
         * using the method `answerWebAppQuery`.
         */
        get webApp() {
            const { web_app } = this.payload;
            if (!web_app)
                return undefined;
            return new web_app_info_1.WebAppInfo(web_app);
        }
    };
    return MenuButton = _classThis;
})();
exports.MenuButton = MenuButton;
(0, utils_1.memoizeGetters)(MenuButton, ["webApp"]);
