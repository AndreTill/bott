"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShippingQuery = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const utils_1 = require("../utils");
const shipping_address_1 = require("./shipping-address");
const user_1 = require("./user");
/** This object contains information about an incoming shipping query. */
let ShippingQuery = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_id_decorators;
    let _get_from_decorators;
    let _get_senderId_decorators;
    let _get_invoicePayload_decorators;
    let _get_shippingAddress_decorators;
    var ShippingQuery = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_id_decorators = [(0, inspectable_1.Inspect)()];
            _get_from_decorators = [(0, inspectable_1.Inspect)()];
            _get_senderId_decorators = [(0, inspectable_1.Inspect)()];
            _get_invoicePayload_decorators = [(0, inspectable_1.Inspect)()];
            _get_shippingAddress_decorators = [(0, inspectable_1.Inspect)()];
            tslib_1.__esDecorate(this, null, _get_id_decorators, { kind: "getter", name: "id", static: false, private: false, access: { has: obj => "id" in obj, get: obj => obj.id }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_from_decorators, { kind: "getter", name: "from", static: false, private: false, access: { has: obj => "from" in obj, get: obj => obj.from }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_senderId_decorators, { kind: "getter", name: "senderId", static: false, private: false, access: { has: obj => "senderId" in obj, get: obj => obj.senderId }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_invoicePayload_decorators, { kind: "getter", name: "invoicePayload", static: false, private: false, access: { has: obj => "invoicePayload" in obj, get: obj => obj.invoicePayload }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_shippingAddress_decorators, { kind: "getter", name: "shippingAddress", static: false, private: false, access: { has: obj => "shippingAddress" in obj, get: obj => obj.shippingAddress }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            ShippingQuery = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /** Unique query identifier */
        get id() {
            return this.payload.id;
        }
        /** User who sent the query */
        get from() {
            return new user_1.User(this.payload.from);
        }
        /** Sender ID */
        get senderId() {
            return this.from.id;
        }
        /** Bot specified invoice payload */
        get invoicePayload() {
            return this.payload.invoice_payload;
        }
        /** User specified shipping address */
        get shippingAddress() {
            return new shipping_address_1.ShippingAddress(this.payload.shipping_address);
        }
    };
    return ShippingQuery = _classThis;
})();
exports.ShippingQuery = ShippingQuery;
(0, utils_1.memoizeGetters)(ShippingQuery, ["from", "shippingAddress"]);
