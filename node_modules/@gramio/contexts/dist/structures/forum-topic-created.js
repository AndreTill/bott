"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ForumTopicCreated = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
/** This object represents a service message about a new forum topic created in the chat. */
let ForumTopicCreated = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_name_decorators;
    let _get_iconColor_decorators;
    let _get_iconCustomEmojiId_decorators;
    var ForumTopicCreated = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_name_decorators = [(0, inspectable_1.Inspect)()];
            _get_iconColor_decorators = [(0, inspectable_1.Inspect)()];
            _get_iconCustomEmojiId_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            tslib_1.__esDecorate(this, null, _get_name_decorators, { kind: "getter", name: "name", static: false, private: false, access: { has: obj => "name" in obj, get: obj => obj.name }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_iconColor_decorators, { kind: "getter", name: "iconColor", static: false, private: false, access: { has: obj => "iconColor" in obj, get: obj => obj.iconColor }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_iconCustomEmojiId_decorators, { kind: "getter", name: "iconCustomEmojiId", static: false, private: false, access: { has: obj => "iconCustomEmojiId" in obj, get: obj => obj.iconCustomEmojiId }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            ForumTopicCreated = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /** Name of the topic */
        get name() {
            return this.payload.name;
        }
        /** Color of the topic icon in RGB format */
        get iconColor() {
            return this.payload.icon_color;
        }
        /** Unique identifier of the custom emoji shown as the topic icon */
        get iconCustomEmojiId() {
            return this.payload.icon_custom_emoji_id;
        }
    };
    return ForumTopicCreated = _classThis;
})();
exports.ForumTopicCreated = ForumTopicCreated;
