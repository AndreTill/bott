import type { TelegramObjects } from "@gramio/types";
/**
 * Contains data required for decrypting and authenticatin
 * `EncryptedPassportElement`. See the Telegram Passport Documentation for a
 * complete description of the data decryption and authentication processes.
 */
export declare class EncryptedCredentials {
    payload: TelegramObjects.TelegramEncryptedCredentials;
    constructor(payload: TelegramObjects.TelegramEncryptedCredentials);
    /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
    get [Symbol.toStringTag](): string;
    /**
     * Base64-encoded encrypted JSON-serialized data with unique user's payload,
     * data hashes and secrets required for `EncryptedPassportElement` decryption
     * and authentication
     */
    get data(): string;
    /** Base64-encoded data hash for data authentication */
    get hash(): string;
    /**
     * Base64-encoded secret, encrypted with the bot's public RSA key, required
     * for data decryption
     */
    get secret(): string;
}
