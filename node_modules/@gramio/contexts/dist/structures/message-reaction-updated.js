"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageReactionUpdated = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const utils_1 = require("../utils");
const chat_1 = require("./chat");
const user_1 = require("./user");
/** This object represents a change of a reaction on a message performed by a user. */
let MessageReactionUpdated = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_chat_decorators;
    let _get_id_decorators;
    let _get_user_decorators;
    let _get_actorChat_decorators;
    let _get_date_decorators;
    let _get_oldReactions_decorators;
    let _get_newReactions_decorators;
    var MessageReactionUpdated = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_chat_decorators = [(0, inspectable_1.Inspect)()];
            _get_id_decorators = [(0, inspectable_1.Inspect)()];
            _get_user_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_actorChat_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_date_decorators = [(0, inspectable_1.Inspect)()];
            _get_oldReactions_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_newReactions_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            tslib_1.__esDecorate(this, null, _get_chat_decorators, { kind: "getter", name: "chat", static: false, private: false, access: { has: obj => "chat" in obj, get: obj => obj.chat }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_id_decorators, { kind: "getter", name: "id", static: false, private: false, access: { has: obj => "id" in obj, get: obj => obj.id }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_user_decorators, { kind: "getter", name: "user", static: false, private: false, access: { has: obj => "user" in obj, get: obj => obj.user }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_actorChat_decorators, { kind: "getter", name: "actorChat", static: false, private: false, access: { has: obj => "actorChat" in obj, get: obj => obj.actorChat }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_date_decorators, { kind: "getter", name: "date", static: false, private: false, access: { has: obj => "date" in obj, get: obj => obj.date }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_oldReactions_decorators, { kind: "getter", name: "oldReactions", static: false, private: false, access: { has: obj => "oldReactions" in obj, get: obj => obj.oldReactions }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_newReactions_decorators, { kind: "getter", name: "newReactions", static: false, private: false, access: { has: obj => "newReactions" in obj, get: obj => obj.newReactions }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            MessageReactionUpdated = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /** The chat containing the message the user reacted to */
        get chat() {
            return new chat_1.Chat(this.payload.chat);
        }
        /** Unique identifier of the message inside the chat */
        get id() {
            return this.payload.message_id;
        }
        /** The user that changed the reaction, if the user isn't anonymous */
        get user() {
            const { user } = this.payload;
            if (!user)
                return undefined;
            return new user_1.User(user);
        }
        /** The chat on behalf of which the reaction was changed, if the user is anonymous */
        get actorChat() {
            const { actor_chat } = this.payload;
            if (!actor_chat)
                return undefined;
            return new chat_1.Chat(actor_chat);
        }
        /** Date of the change in Unix time */
        get date() {
            return this.payload.date;
        }
        /** Previous list of reaction types that were set by the user */
        get oldReactions() {
            return this.payload.old_reaction;
        }
        /** New list of reaction types that have been set by the user */
        get newReactions() {
            return this.payload.new_reaction;
        }
    };
    return MessageReactionUpdated = _classThis;
})();
exports.MessageReactionUpdated = MessageReactionUpdated;
(0, utils_1.memoizeGetters)(MessageReactionUpdated, ["chat", "user", "actorChat"]);
