import type { TelegramObjects } from "@gramio/types";
import { AnimationAttachment, AudioAttachment, ContactAttachment, DocumentAttachment, PhotoAttachment, StickerAttachment, StoryAttachment, VideoAttachment, VideoNoteAttachment, VoiceAttachment } from "./attachments/index";
import { Chat } from "./chat";
import { Dice } from "./dice";
import { Game } from "./game";
import { Giveaway } from "./giveaway";
import { GiveawayWinners } from "./giveaway-winners";
import { Invoice } from "./invoice";
import { LinkPreviewOptions } from "./link-preview-options";
import { Location } from "./location";
import { MessageOriginChannel, MessageOriginChat, MessageOriginHiddenUser, MessageOriginUser } from "./message-origin/index";
import { PaidMediaInfo } from "./paid-media-info";
import { Poll } from "./poll";
import { Venue } from "./venue";
/** This object contains information about a message that is being replied to, which may come from another chat or forum topic. */
export declare class ExternalReplyInfo {
    payload: TelegramObjects.TelegramExternalReplyInfo;
    constructor(payload: TelegramObjects.TelegramExternalReplyInfo);
    /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
    get [Symbol.toStringTag](): string;
    /** Origin of the message replied to by the given message */
    get origin(): MessageOriginUser | MessageOriginChat | MessageOriginChannel | MessageOriginHiddenUser;
    /** Chat the original message belongs to. Available only if the chat is a supergroup or a channel. */
    get chat(): Chat | undefined;
    /** Unique message identifier inside the original chat. Available only if the original chat is a supergroup or a channel. */
    get messageId(): number | undefined;
    /** Options used for link preview generation for the original message, if it is a text message */
    get linkPreviewOptions(): LinkPreviewOptions | undefined;
    /** Message is an animation, information about the animation */
    get animation(): AnimationAttachment | undefined;
    /** Message is an audio file, information about the file */
    get audio(): AudioAttachment | undefined;
    /** Message is a general file, information about the file */
    get document(): DocumentAttachment | undefined;
    /** Message is a photo, available sizes of the photo */
    get photo(): PhotoAttachment | undefined;
    /** Message is a sticker, information about the sticker */
    get sticker(): StickerAttachment | undefined;
    /** Message is a forwarded story */
    get story(): StoryAttachment | undefined;
    /** Message is a video, information about the video */
    get video(): VideoAttachment | undefined;
    /** Message is a video note, information about the video message */
    get videoNote(): VideoNoteAttachment | undefined;
    /** Message is a voice message, information about the file */
    get voice(): VoiceAttachment | undefined;
    /** `true`, if the message media is covered by a spoiler animation */
    hasMediaSpoiler(): boolean | undefined;
    /** Message is a shared contact, information about the contact */
    get contact(): ContactAttachment | undefined;
    /** Message is a dice with random value */
    get dice(): Dice | undefined;
    /** Message is a game, information about the game */
    get game(): Game | undefined;
    /** Message is a scheduled giveaway, information about the giveaway */
    get giveaway(): Giveaway | undefined;
    /** A giveaway with public winners was completed */
    get giveawayWinners(): GiveawayWinners | undefined;
    /** Message is an invoice for a payment, information about the invoice */
    get invoice(): Invoice | undefined;
    /** Message is a shared location, information about the location */
    get location(): Location | undefined;
    /** Message is a native poll, information about the poll */
    get poll(): Poll | undefined;
    /** Message is a venue, information about the venue */
    get venue(): Venue | undefined;
    get paidMedia(): PaidMediaInfo | undefined;
}
