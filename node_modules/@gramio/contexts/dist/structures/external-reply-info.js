"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalReplyInfo = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const index_1 = require("./attachments/index");
const utils_1 = require("../utils");
const chat_1 = require("./chat");
const dice_1 = require("./dice");
const game_1 = require("./game");
const giveaway_1 = require("./giveaway");
const giveaway_winners_1 = require("./giveaway-winners");
const invoice_1 = require("./invoice");
const link_preview_options_1 = require("./link-preview-options");
const location_1 = require("./location");
const index_2 = require("./message-origin/index");
const paid_media_info_1 = require("./paid-media-info");
const photo_size_1 = require("./photo-size");
const poll_1 = require("./poll");
const venue_1 = require("./venue");
/** This object contains information about a message that is being replied to, which may come from another chat or forum topic. */
let ExternalReplyInfo = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_origin_decorators;
    let _get_chat_decorators;
    let _get_messageId_decorators;
    let _get_linkPreviewOptions_decorators;
    let _get_animation_decorators;
    let _get_audio_decorators;
    let _get_document_decorators;
    let _get_photo_decorators;
    let _get_sticker_decorators;
    let _get_story_decorators;
    let _get_video_decorators;
    let _get_videoNote_decorators;
    let _get_voice_decorators;
    let _hasMediaSpoiler_decorators;
    let _get_contact_decorators;
    let _get_dice_decorators;
    let _get_game_decorators;
    let _get_giveaway_decorators;
    let _get_giveawayWinners_decorators;
    let _get_invoice_decorators;
    let _get_location_decorators;
    let _get_poll_decorators;
    let _get_venue_decorators;
    let _get_paidMedia_decorators;
    var ExternalReplyInfo = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_origin_decorators = [(0, inspectable_1.Inspect)()];
            _get_chat_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_messageId_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_linkPreviewOptions_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_animation_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_audio_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_document_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_photo_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_sticker_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_story_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_video_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_videoNote_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_voice_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _hasMediaSpoiler_decorators = [(0, inspectable_1.Inspect)({ compute: true, nullable: false })];
            _get_contact_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_dice_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_game_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_giveaway_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_giveawayWinners_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_invoice_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_location_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_poll_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_venue_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_paidMedia_decorators = [(0, inspectable_1.Inspect)()];
            tslib_1.__esDecorate(this, null, _get_origin_decorators, { kind: "getter", name: "origin", static: false, private: false, access: { has: obj => "origin" in obj, get: obj => obj.origin }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_chat_decorators, { kind: "getter", name: "chat", static: false, private: false, access: { has: obj => "chat" in obj, get: obj => obj.chat }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_messageId_decorators, { kind: "getter", name: "messageId", static: false, private: false, access: { has: obj => "messageId" in obj, get: obj => obj.messageId }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_linkPreviewOptions_decorators, { kind: "getter", name: "linkPreviewOptions", static: false, private: false, access: { has: obj => "linkPreviewOptions" in obj, get: obj => obj.linkPreviewOptions }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_animation_decorators, { kind: "getter", name: "animation", static: false, private: false, access: { has: obj => "animation" in obj, get: obj => obj.animation }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_audio_decorators, { kind: "getter", name: "audio", static: false, private: false, access: { has: obj => "audio" in obj, get: obj => obj.audio }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_document_decorators, { kind: "getter", name: "document", static: false, private: false, access: { has: obj => "document" in obj, get: obj => obj.document }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_photo_decorators, { kind: "getter", name: "photo", static: false, private: false, access: { has: obj => "photo" in obj, get: obj => obj.photo }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_sticker_decorators, { kind: "getter", name: "sticker", static: false, private: false, access: { has: obj => "sticker" in obj, get: obj => obj.sticker }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_story_decorators, { kind: "getter", name: "story", static: false, private: false, access: { has: obj => "story" in obj, get: obj => obj.story }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_video_decorators, { kind: "getter", name: "video", static: false, private: false, access: { has: obj => "video" in obj, get: obj => obj.video }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_videoNote_decorators, { kind: "getter", name: "videoNote", static: false, private: false, access: { has: obj => "videoNote" in obj, get: obj => obj.videoNote }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_voice_decorators, { kind: "getter", name: "voice", static: false, private: false, access: { has: obj => "voice" in obj, get: obj => obj.voice }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _hasMediaSpoiler_decorators, { kind: "method", name: "hasMediaSpoiler", static: false, private: false, access: { has: obj => "hasMediaSpoiler" in obj, get: obj => obj.hasMediaSpoiler }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_contact_decorators, { kind: "getter", name: "contact", static: false, private: false, access: { has: obj => "contact" in obj, get: obj => obj.contact }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_dice_decorators, { kind: "getter", name: "dice", static: false, private: false, access: { has: obj => "dice" in obj, get: obj => obj.dice }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_game_decorators, { kind: "getter", name: "game", static: false, private: false, access: { has: obj => "game" in obj, get: obj => obj.game }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_giveaway_decorators, { kind: "getter", name: "giveaway", static: false, private: false, access: { has: obj => "giveaway" in obj, get: obj => obj.giveaway }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_giveawayWinners_decorators, { kind: "getter", name: "giveawayWinners", static: false, private: false, access: { has: obj => "giveawayWinners" in obj, get: obj => obj.giveawayWinners }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_invoice_decorators, { kind: "getter", name: "invoice", static: false, private: false, access: { has: obj => "invoice" in obj, get: obj => obj.invoice }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_location_decorators, { kind: "getter", name: "location", static: false, private: false, access: { has: obj => "location" in obj, get: obj => obj.location }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_poll_decorators, { kind: "getter", name: "poll", static: false, private: false, access: { has: obj => "poll" in obj, get: obj => obj.poll }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_venue_decorators, { kind: "getter", name: "venue", static: false, private: false, access: { has: obj => "venue" in obj, get: obj => obj.venue }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_paidMedia_decorators, { kind: "getter", name: "paidMedia", static: false, private: false, access: { has: obj => "paidMedia" in obj, get: obj => obj.paidMedia }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            ExternalReplyInfo = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /** Origin of the message replied to by the given message */
        get origin() {
            if (this.payload.origin.type === "user") {
                return new index_2.MessageOriginUser(this.payload.origin);
            }
            if (this.payload.origin.type === "chat") {
                return new index_2.MessageOriginChat(this.payload.origin);
            }
            if (this.payload.origin.type === "channel") {
                return new index_2.MessageOriginChannel(this.payload.origin);
            }
            if (this.payload.origin.type === "hidden_user") {
                return new index_2.MessageOriginHiddenUser(this.payload.origin);
            }
            throw new TypeError("unknown message origin type");
        }
        /** Chat the original message belongs to. Available only if the chat is a supergroup or a channel. */
        get chat() {
            const { chat } = this.payload;
            if (!chat) {
                return undefined;
            }
            return new chat_1.Chat(chat);
        }
        /** Unique message identifier inside the original chat. Available only if the original chat is a supergroup or a channel. */
        get messageId() {
            return this.payload.message_id;
        }
        /** Options used for link preview generation for the original message, if it is a text message */
        get linkPreviewOptions() {
            const { link_preview_options } = this.payload;
            if (!link_preview_options) {
                return undefined;
            }
            return new link_preview_options_1.LinkPreviewOptions(link_preview_options);
        }
        /** Message is an animation, information about the animation */
        get animation() {
            const { animation } = this.payload;
            if (!animation) {
                return undefined;
            }
            return new index_1.AnimationAttachment(animation);
        }
        /** Message is an audio file, information about the file */
        get audio() {
            const { audio } = this.payload;
            if (!audio) {
                return undefined;
            }
            return new index_1.AudioAttachment(audio);
        }
        /** Message is a general file, information about the file */
        get document() {
            const { document } = this.payload;
            if (!document) {
                return undefined;
            }
            return new index_1.DocumentAttachment(document);
        }
        /** Message is a photo, available sizes of the photo */
        get photo() {
            const { photo } = this.payload;
            if (!photo) {
                return undefined;
            }
            return new index_1.PhotoAttachment(photo.map((size) => new photo_size_1.PhotoSize(size)));
        }
        /** Message is a sticker, information about the sticker */
        get sticker() {
            const { sticker } = this.payload;
            if (!sticker) {
                return undefined;
            }
            return new index_1.StickerAttachment(sticker);
        }
        /** Message is a forwarded story */
        get story() {
            const { story } = this.payload;
            if (!story) {
                return undefined;
            }
            return new index_1.StoryAttachment(story);
        }
        /** Message is a video, information about the video */
        get video() {
            const { video } = this.payload;
            if (!video) {
                return undefined;
            }
            return new index_1.VideoAttachment(video);
        }
        /** Message is a video note, information about the video message */
        get videoNote() {
            const { video_note } = this.payload;
            if (!video_note) {
                return undefined;
            }
            return new index_1.VideoNoteAttachment(video_note);
        }
        /** Message is a voice message, information about the file */
        get voice() {
            const { voice } = this.payload;
            if (!voice) {
                return undefined;
            }
            return new index_1.VoiceAttachment(voice);
        }
        /** `true`, if the message media is covered by a spoiler animation */
        hasMediaSpoiler() {
            return this.payload.has_media_spoiler;
        }
        /** Message is a shared contact, information about the contact */
        get contact() {
            const { contact } = this.payload;
            if (!contact) {
                return undefined;
            }
            return new index_1.ContactAttachment(contact);
        }
        /** Message is a dice with random value */
        get dice() {
            const { dice } = this.payload;
            if (!dice) {
                return undefined;
            }
            return new dice_1.Dice(dice);
        }
        /** Message is a game, information about the game */
        get game() {
            const { game } = this.payload;
            if (!game) {
                return undefined;
            }
            return new game_1.Game(game);
        }
        /** Message is a scheduled giveaway, information about the giveaway */
        get giveaway() {
            const { giveaway } = this.payload;
            if (!giveaway) {
                return undefined;
            }
            return new giveaway_1.Giveaway(giveaway);
        }
        /** A giveaway with public winners was completed */
        get giveawayWinners() {
            const { giveaway_winners } = this.payload;
            if (!giveaway_winners) {
                return undefined;
            }
            return new giveaway_winners_1.GiveawayWinners(giveaway_winners);
        }
        /** Message is an invoice for a payment, information about the invoice */
        get invoice() {
            const { invoice } = this.payload;
            if (!invoice) {
                return undefined;
            }
            return new invoice_1.Invoice(invoice);
        }
        /** Message is a shared location, information about the location */
        get location() {
            const { location } = this.payload;
            if (!location) {
                return undefined;
            }
            return new location_1.Location(location);
        }
        /** Message is a native poll, information about the poll */
        get poll() {
            const { poll } = this.payload;
            if (!poll) {
                return undefined;
            }
            return new poll_1.Poll(poll);
        }
        /** Message is a venue, information about the venue */
        get venue() {
            const { venue } = this.payload;
            if (!venue) {
                return undefined;
            }
            return new venue_1.Venue(venue);
        }
        get paidMedia() {
            return this.payload.paid_media
                ? new paid_media_info_1.PaidMediaInfo(this.payload.paid_media)
                : undefined;
        }
    };
    return ExternalReplyInfo = _classThis;
})();
exports.ExternalReplyInfo = ExternalReplyInfo;
(0, utils_1.memoizeGetters)(ExternalReplyInfo, [
    "origin",
    "chat",
    "linkPreviewOptions",
    "animation",
    "audio",
    "document",
    "photo",
    "sticker",
    "story",
    "video",
    "videoNote",
    "voice",
    "contact",
    "dice",
    "game",
    "giveaway",
    "giveawayWinners",
    "invoice",
    "location",
    "poll",
    "venue",
]);
