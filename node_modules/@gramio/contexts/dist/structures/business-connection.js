"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BusinessConnection = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const user_1 = require("./user");
/**
 * Describes the connection of the bot with a business account.
 *
 * [Documentation](https://core.telegram.org/bots/api/#businessconnection)
 */
let BusinessConnection = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_id_decorators;
    let _get_user_decorators;
    let _get_userChatId_decorators;
    let _get_date_decorators;
    let _get_canReply_decorators;
    let _get_isEnabled_decorators;
    var BusinessConnection = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_id_decorators = [(0, inspectable_1.Inspect)()];
            _get_user_decorators = [(0, inspectable_1.Inspect)()];
            _get_userChatId_decorators = [(0, inspectable_1.Inspect)()];
            _get_date_decorators = [(0, inspectable_1.Inspect)()];
            _get_canReply_decorators = [(0, inspectable_1.Inspect)()];
            _get_isEnabled_decorators = [(0, inspectable_1.Inspect)()];
            tslib_1.__esDecorate(this, null, _get_id_decorators, { kind: "getter", name: "id", static: false, private: false, access: { has: obj => "id" in obj, get: obj => obj.id }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_user_decorators, { kind: "getter", name: "user", static: false, private: false, access: { has: obj => "user" in obj, get: obj => obj.user }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_userChatId_decorators, { kind: "getter", name: "userChatId", static: false, private: false, access: { has: obj => "userChatId" in obj, get: obj => obj.userChatId }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_date_decorators, { kind: "getter", name: "date", static: false, private: false, access: { has: obj => "date" in obj, get: obj => obj.date }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canReply_decorators, { kind: "getter", name: "canReply", static: false, private: false, access: { has: obj => "canReply" in obj, get: obj => obj.canReply }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_isEnabled_decorators, { kind: "getter", name: "isEnabled", static: false, private: false, access: { has: obj => "isEnabled" in obj, get: obj => obj.isEnabled }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            BusinessConnection = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /**
         * Unique identifier of the business connection
         */
        get id() {
            return this.payload.id;
        }
        /**
         * Business account user that created the business connection
         */
        get user() {
            return new user_1.User(this.payload.user);
        }
        /**
         * Identifier of a private chat with the user who created the business connection. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.
         */
        get userChatId() {
            return this.payload.user_chat_id;
        }
        /**
         * Date the connection was established in Unix time
         */
        get date() {
            return this.payload.date;
        }
        /**
         * True, if the bot can act on behalf of the business account in chats that were active in the last 24 hours
         */
        get canReply() {
            return this.payload.can_reply;
        }
        /**
         * True, if the connection is active
         */
        get isEnabled() {
            return this.payload.is_enabled;
        }
    };
    return BusinessConnection = _classThis;
})();
exports.BusinessConnection = BusinessConnection;
