"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GiveawayWinners = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const utils_1 = require("../utils");
const chat_1 = require("./chat");
const user_1 = require("./user");
/** This object represents a message about the completion of a giveaway with public winners. */
let GiveawayWinners = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_winnersSelectionDate_decorators;
    let _get_winnerCount_decorators;
    let _get_winners_decorators;
    let _get_additionalChatCount_decorators;
    let _get_premiumSubscriptionMonthCount_decorators;
    let _get_onlyNewMembers_decorators;
    let _wasRefunded_decorators;
    let _get_prizeDescription_decorators;
    var GiveawayWinners = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_winnersSelectionDate_decorators = [(0, inspectable_1.Inspect)()];
            _get_winnerCount_decorators = [(0, inspectable_1.Inspect)()];
            _get_winners_decorators = [(0, inspectable_1.Inspect)()];
            _get_additionalChatCount_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_premiumSubscriptionMonthCount_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _get_onlyNewMembers_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            _wasRefunded_decorators = [(0, inspectable_1.Inspect)({ compute: true, nullable: false })];
            _get_prizeDescription_decorators = [(0, inspectable_1.Inspect)({ nullable: false })];
            tslib_1.__esDecorate(this, null, _get_winnersSelectionDate_decorators, { kind: "getter", name: "winnersSelectionDate", static: false, private: false, access: { has: obj => "winnersSelectionDate" in obj, get: obj => obj.winnersSelectionDate }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_winnerCount_decorators, { kind: "getter", name: "winnerCount", static: false, private: false, access: { has: obj => "winnerCount" in obj, get: obj => obj.winnerCount }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_winners_decorators, { kind: "getter", name: "winners", static: false, private: false, access: { has: obj => "winners" in obj, get: obj => obj.winners }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_additionalChatCount_decorators, { kind: "getter", name: "additionalChatCount", static: false, private: false, access: { has: obj => "additionalChatCount" in obj, get: obj => obj.additionalChatCount }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_premiumSubscriptionMonthCount_decorators, { kind: "getter", name: "premiumSubscriptionMonthCount", static: false, private: false, access: { has: obj => "premiumSubscriptionMonthCount" in obj, get: obj => obj.premiumSubscriptionMonthCount }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_onlyNewMembers_decorators, { kind: "getter", name: "onlyNewMembers", static: false, private: false, access: { has: obj => "onlyNewMembers" in obj, get: obj => obj.onlyNewMembers }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _wasRefunded_decorators, { kind: "method", name: "wasRefunded", static: false, private: false, access: { has: obj => "wasRefunded" in obj, get: obj => obj.wasRefunded }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_prizeDescription_decorators, { kind: "getter", name: "prizeDescription", static: false, private: false, access: { has: obj => "prizeDescription" in obj, get: obj => obj.prizeDescription }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            GiveawayWinners = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /** The chat that created the giveaway */
        get chat() {
            return new chat_1.Chat(this.payload.chat);
        }
        /** Identifier of the message with the giveaway in the chat */
        get messageId() {
            return this.payload.giveaway_message_id;
        }
        /** Point in time (Unix timestamp) when winners of the giveaway were selected */
        get winnersSelectionDate() {
            return this.payload.winners_selection_date;
        }
        /** Total number of winners in the giveaway */
        get winnerCount() {
            return this.payload.winner_count;
        }
        /** List of up to 100 winners of the giveaway */
        get winners() {
            return this.payload.winners.map((w) => new user_1.User(w));
        }
        /** The number of other chats the user had to join in order to be eligible for the giveaway */
        get additionalChatCount() {
            return this.payload.additional_chat_count;
        }
        /** The number of months the Telegram Premium subscription won from the giveaway will be active for */
        get premiumSubscriptionMonthCount() {
            return this.payload.premium_subscription_month_count;
        }
        /** Number of undistributed prizes */
        get unclaimedPrizeCount() {
            return this.payload.unclaimed_prize_count;
        }
        /** `true`, if only users who had joined the chats after the giveaway started were eligible to win */
        get onlyNewMembers() {
            return this.payload.only_new_members;
        }
        /** `true`, if the giveaway was canceled because the payment for it was refunded */
        wasRefunded() {
            return this.payload.was_refunded;
        }
        /** Description of additional giveaway prize */
        get prizeDescription() {
            return this.payload.prize_description;
        }
    };
    return GiveawayWinners = _classThis;
})();
exports.GiveawayWinners = GiveawayWinners;
(0, utils_1.memoizeGetters)(GiveawayWinners, ["chat"]);
