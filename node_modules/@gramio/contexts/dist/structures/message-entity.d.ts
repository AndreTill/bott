import type { TelegramObjects } from "@gramio/types";
import { User } from "./user";
/**
 * This object represents one special entity in a text message.
 * For example, hashtags, usernames, URLs, etc.
 */
export declare class MessageEntity {
    payload: TelegramObjects.TelegramMessageEntity;
    constructor(payload: TelegramObjects.TelegramMessageEntity);
    /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
    get [Symbol.toStringTag](): string;
    /**
     * Type of the entity.
     *
     * Can be `mention` (`@username`), `hashtag` (`#hashtag`), `cashtag`
     * (`$USD`), `bot_command` (`/start@jobs_bot`), `url`
     * (`https://telegram.org`), `email` (`do-not-reply@telegram.org`),
     * `phone_number` (`+1-212-555-0123`), `bold` (**bold text**), `italic`
     * (_italic text_), `underline` (underlined text), `strikethrough`
     * (~~strikethrough text~~), “spoiler” (spoiler message), `code` (`monowidth string`),
     * `pre` (`monowidth block`), `text_link` (for clickable text URLs), `text_mention`
     * (for users without usernames)
     */
    get type(): TelegramObjects.TelegramMessageEntityType;
    /** Offset in UTF-16 code units to the start of the entity */
    get offset(): number;
    /** Length of the entity in UTF-16 code units */
    get length(): number;
    /**
     * For `text_link` only, url that will be opened after user taps on the text
     */
    get url(): string | undefined;
    /** For `text_mention` only, the mentioned user */
    get user(): User | undefined;
    /** For `pre` only, the programming language of the entity text */
    get language(): string | undefined;
    /**
     * For `custom_emoji` only, unique identifier of the custom emoji.
     *
     * Use `getCustomEmojiStickers` to get full information about the sticker
     */
    get customEmojiId(): string | undefined;
}
