"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BusinessIntro = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
const utils_1 = require("../utils");
const sticker_1 = require("./attachments/sticker");
/**
 * Contains information about the start page settings of a Telegram Business account.
 *
 * [Documentation](https://core.telegram.org/bots/api/#businessintro)
 */
let BusinessIntro = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_title_decorators;
    let _get_message_decorators;
    let _get_sticker_decorators;
    var BusinessIntro = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_title_decorators = [(0, inspectable_1.Inspect)()];
            _get_message_decorators = [(0, inspectable_1.Inspect)()];
            _get_sticker_decorators = [(0, inspectable_1.Inspect)()];
            tslib_1.__esDecorate(this, null, _get_title_decorators, { kind: "getter", name: "title", static: false, private: false, access: { has: obj => "title" in obj, get: obj => obj.title }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_message_decorators, { kind: "getter", name: "message", static: false, private: false, access: { has: obj => "message" in obj, get: obj => obj.message }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_sticker_decorators, { kind: "getter", name: "sticker", static: false, private: false, access: { has: obj => "sticker" in obj, get: obj => obj.sticker }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            BusinessIntro = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /**
         * *Optional*. Title text of the business intro
         */
        get title() {
            return this.payload.title;
        }
        /**
         * *Optional*. Message text of the business intro
         */
        get message() {
            return this.payload.message;
        }
        /**
         * *Optional*. Sticker of the business intro
         */
        get sticker() {
            return this.payload.sticker
                ? new sticker_1.StickerAttachment(this.payload.sticker)
                : undefined;
        }
    };
    return BusinessIntro = _classThis;
})();
exports.BusinessIntro = BusinessIntro;
(0, utils_1.memoizeGetters)(BusinessIntro, ["sticker"]);
