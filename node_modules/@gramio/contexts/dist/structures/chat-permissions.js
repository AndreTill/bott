"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatPermissions = void 0;
const tslib_1 = require("tslib");
const inspectable_1 = require("inspectable");
/**
 * Describes actions that a non-administrator user is allowed to take in a chat.
 *
 * [Documentation](https://core.telegram.org/bots/api/#chatpermissions)
 */
let ChatPermissions = (() => {
    let _classDecorators = [(0, inspectable_1.Inspectable)()];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _instanceExtraInitializers = [];
    let _get_canSendMessages_decorators;
    let _get_canSendAudios_decorators;
    let _get_canSendDocuments_decorators;
    let _get_canSendPhotos_decorators;
    let _get_canSendVideos_decorators;
    let _get_canSendVideoNotes_decorators;
    let _get_canSendVoiceNotes_decorators;
    let _get_canSendPolls_decorators;
    let _get_canSendOtherMessages_decorators;
    let _get_canAddWebPagePreviews_decorators;
    let _get_canChangeInfo_decorators;
    let _get_canInviteUsers_decorators;
    let _get_canPinMessages_decorators;
    let _get_canManageTopics_decorators;
    var ChatPermissions = class {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _get_canSendMessages_decorators = [(0, inspectable_1.Inspect)()];
            _get_canSendAudios_decorators = [(0, inspectable_1.Inspect)()];
            _get_canSendDocuments_decorators = [(0, inspectable_1.Inspect)()];
            _get_canSendPhotos_decorators = [(0, inspectable_1.Inspect)()];
            _get_canSendVideos_decorators = [(0, inspectable_1.Inspect)()];
            _get_canSendVideoNotes_decorators = [(0, inspectable_1.Inspect)()];
            _get_canSendVoiceNotes_decorators = [(0, inspectable_1.Inspect)()];
            _get_canSendPolls_decorators = [(0, inspectable_1.Inspect)()];
            _get_canSendOtherMessages_decorators = [(0, inspectable_1.Inspect)()];
            _get_canAddWebPagePreviews_decorators = [(0, inspectable_1.Inspect)()];
            _get_canChangeInfo_decorators = [(0, inspectable_1.Inspect)()];
            _get_canInviteUsers_decorators = [(0, inspectable_1.Inspect)()];
            _get_canPinMessages_decorators = [(0, inspectable_1.Inspect)()];
            _get_canManageTopics_decorators = [(0, inspectable_1.Inspect)()];
            tslib_1.__esDecorate(this, null, _get_canSendMessages_decorators, { kind: "getter", name: "canSendMessages", static: false, private: false, access: { has: obj => "canSendMessages" in obj, get: obj => obj.canSendMessages }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canSendAudios_decorators, { kind: "getter", name: "canSendAudios", static: false, private: false, access: { has: obj => "canSendAudios" in obj, get: obj => obj.canSendAudios }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canSendDocuments_decorators, { kind: "getter", name: "canSendDocuments", static: false, private: false, access: { has: obj => "canSendDocuments" in obj, get: obj => obj.canSendDocuments }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canSendPhotos_decorators, { kind: "getter", name: "canSendPhotos", static: false, private: false, access: { has: obj => "canSendPhotos" in obj, get: obj => obj.canSendPhotos }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canSendVideos_decorators, { kind: "getter", name: "canSendVideos", static: false, private: false, access: { has: obj => "canSendVideos" in obj, get: obj => obj.canSendVideos }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canSendVideoNotes_decorators, { kind: "getter", name: "canSendVideoNotes", static: false, private: false, access: { has: obj => "canSendVideoNotes" in obj, get: obj => obj.canSendVideoNotes }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canSendVoiceNotes_decorators, { kind: "getter", name: "canSendVoiceNotes", static: false, private: false, access: { has: obj => "canSendVoiceNotes" in obj, get: obj => obj.canSendVoiceNotes }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canSendPolls_decorators, { kind: "getter", name: "canSendPolls", static: false, private: false, access: { has: obj => "canSendPolls" in obj, get: obj => obj.canSendPolls }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canSendOtherMessages_decorators, { kind: "getter", name: "canSendOtherMessages", static: false, private: false, access: { has: obj => "canSendOtherMessages" in obj, get: obj => obj.canSendOtherMessages }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canAddWebPagePreviews_decorators, { kind: "getter", name: "canAddWebPagePreviews", static: false, private: false, access: { has: obj => "canAddWebPagePreviews" in obj, get: obj => obj.canAddWebPagePreviews }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canChangeInfo_decorators, { kind: "getter", name: "canChangeInfo", static: false, private: false, access: { has: obj => "canChangeInfo" in obj, get: obj => obj.canChangeInfo }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canInviteUsers_decorators, { kind: "getter", name: "canInviteUsers", static: false, private: false, access: { has: obj => "canInviteUsers" in obj, get: obj => obj.canInviteUsers }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canPinMessages_decorators, { kind: "getter", name: "canPinMessages", static: false, private: false, access: { has: obj => "canPinMessages" in obj, get: obj => obj.canPinMessages }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(this, null, _get_canManageTopics_decorators, { kind: "getter", name: "canManageTopics", static: false, private: false, access: { has: obj => "canManageTopics" in obj, get: obj => obj.canManageTopics }, metadata: _metadata }, null, _instanceExtraInitializers);
            tslib_1.__esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            ChatPermissions = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            tslib_1.__runInitializers(_classThis, _classExtraInitializers);
        }
        payload = tslib_1.__runInitializers(this, _instanceExtraInitializers);
        constructor(payload) {
            this.payload = payload;
        }
        /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
        get [Symbol.toStringTag]() {
            return this.constructor.name;
        }
        /**
         * *Optional*. *True*, if the user is allowed to send text messages, contacts, giveaways, giveaway winners, invoices, locations and venues
         */
        get canSendMessages() {
            return this.payload.can_send_messages;
        }
        /**
         * *Optional*. *True*, if the user is allowed to send audios
         */
        get canSendAudios() {
            return this.payload.can_send_audios;
        }
        /**
         * *Optional*. *True*, if the user is allowed to send documents
         */
        get canSendDocuments() {
            return this.payload.can_send_documents;
        }
        /**
         * *Optional*. *True*, if the user is allowed to send photos
         */
        get canSendPhotos() {
            return this.payload.can_send_photos;
        }
        /**
         * *Optional*. *True*, if the user is allowed to send videos
         */
        get canSendVideos() {
            return this.payload.can_send_videos;
        }
        /**
         * *Optional*. *True*, if the user is allowed to send video notes
         */
        get canSendVideoNotes() {
            return this.payload.can_send_video_notes;
        }
        /**
         * *Optional*. *True*, if the user is allowed to send voice notes
         */
        get canSendVoiceNotes() {
            return this.payload.can_send_voice_notes;
        }
        /**
         * *Optional*. *True*, if the user is allowed to send polls
         */
        get canSendPolls() {
            return this.payload.can_send_polls;
        }
        /**
         * *Optional*. *True*, if the user is allowed to send animations, games, stickers and use inline bots
         */
        get canSendOtherMessages() {
            return this.payload.can_send_other_messages;
        }
        /**
         * *Optional*. *True*, if the user is allowed to add web page previews to their messages
         */
        get canAddWebPagePreviews() {
            return this.payload.can_add_web_page_previews;
        }
        /**
         * *Optional*. *True*, if the user is allowed to change the chat title, photo and other settings. Ignored in public supergroups
         */
        get canChangeInfo() {
            return this.payload.can_change_info;
        }
        /**
         * *Optional*. *True*, if the user is allowed to invite new users to the chat
         */
        get canInviteUsers() {
            return this.payload.can_invite_users;
        }
        /**
         * *Optional*. *True*, if the user is allowed to pin messages. Ignored in public supergroups
         */
        get canPinMessages() {
            return this.payload.can_pin_messages;
        }
        /**
         * *Optional*. *True*, if the user is allowed to create forum topics. If omitted defaults to the value of can\_pin\_messages
         */
        get canManageTopics() {
            return this.payload.can_manage_topics;
        }
    };
    return ChatPermissions = _classThis;
})();
exports.ChatPermissions = ChatPermissions;
