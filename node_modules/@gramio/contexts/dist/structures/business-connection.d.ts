import type { TelegramObjects } from "@gramio/types";
import { User } from "./user";
/**
 * Describes the connection of the bot with a business account.
 *
 * [Documentation](https://core.telegram.org/bots/api/#businessconnection)
 */
export declare class BusinessConnection {
    payload: TelegramObjects.TelegramBusinessConnection;
    constructor(payload: TelegramObjects.TelegramBusinessConnection);
    /** [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) */
    get [Symbol.toStringTag](): string;
    /**
     * Unique identifier of the business connection
     */
    get id(): string;
    /**
     * Business account user that created the business connection
     */
    get user(): User;
    /**
     * Identifier of a private chat with the user who created the business connection. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.
     */
    get userChatId(): number;
    /**
     * Date the connection was established in Unix time
     */
    get date(): number;
    /**
     * True, if the bot can act on behalf of the business account in chats that were active in the last 24 hours
     */
    get canReply(): boolean;
    /**
     * True, if the connection is active
     */
    get isEnabled(): boolean;
}
