/**
 * @module
 *
 * Contexts for GramIO framework
 */
export * from "./contexts/index";
export * from "./structures/index";
export * from "./utils";
export * from "./types";
import * as Contexts from "./contexts/index";
/**
 * Mapping UpdateNames to their contexts
 *
 * @example
 * ```typescript
 * contextMappings["message"] is MessageContext
 * ```
 *
 *  */
export declare const contextsMappings: {
    callback_query: typeof Contexts.CallbackQueryContext;
    chat_join_request: typeof Contexts.ChatJoinRequestContext;
    chat_member: typeof Contexts.ChatMemberContext;
    my_chat_member: typeof Contexts.ChatMemberContext;
    chosen_inline_result: typeof Contexts.ChosenInlineResultContext;
    delete_chat_photo: typeof Contexts.DeleteChatPhotoContext;
    group_chat_created: typeof Contexts.GroupChatCreatedContext;
    inline_query: typeof Contexts.InlineQueryContext;
    invoice: typeof Contexts.InvoiceContext;
    left_chat_member: typeof Contexts.LeftChatMemberContext;
    location: typeof Contexts.LocationContext;
    message_auto_delete_timer_changed: typeof Contexts.MessageAutoDeleteTimerChangedContext;
    message: typeof Contexts.MessageContext;
    channel_post: typeof Contexts.MessageContext;
    edited_message: typeof Contexts.MessageContext;
    edited_channel_post: typeof Contexts.MessageContext;
    business_message: typeof Contexts.MessageContext;
    edited_business_message: typeof Contexts.MessageContext;
    deleted_business_messages: typeof Contexts.BusinessMessagesDeletedContext;
    business_connection: typeof Contexts.BusinessConnectionContext;
    migrate_from_chat_id: typeof Contexts.MigrateFromChatIdContext;
    migrate_to_chat_id: typeof Contexts.MigrateToChatIdContext;
    new_chat_members: typeof Contexts.NewChatMembersContext;
    new_chat_photo: typeof Contexts.NewChatPhotoContext;
    new_chat_title: typeof Contexts.NewChatTitleContext;
    passport_data: typeof Contexts.PassportDataContext;
    pinned_message: typeof Contexts.PinnedMessageContext;
    poll_answer: typeof Contexts.PollAnswerContext;
    poll: typeof Contexts.PollContext;
    pre_checkout_query: typeof Contexts.PreCheckoutQueryContext;
    proximity_alert_triggered: typeof Contexts.ProximityAlertTriggeredContext;
    write_access_allowed: typeof Contexts.WriteAccessAllowedContext;
    boost_added: typeof Contexts.BoostAddedContext;
    chat_background_set: typeof Contexts.ChatBackgroundSetContext;
    forum_topic_created: typeof Contexts.ForumTopicCreatedContext;
    forum_topic_edited: typeof Contexts.ForumTopicEditedContext;
    forum_topic_closed: typeof Contexts.ForumTopicClosedContext;
    forum_topic_reopened: typeof Contexts.ForumTopicReopenedContext;
    general_forum_topic_hidden: typeof Contexts.GeneralForumTopicHiddenContext;
    general_forum_topic_unhidden: typeof Contexts.GeneralForumTopicUnhiddenContext;
    shipping_query: typeof Contexts.ShippingQueryContext;
    successful_payment: typeof Contexts.SuccessfulPaymentContext;
    refunded_payment: typeof Contexts.RefundedPaymentContext;
    users_shared: typeof Contexts.UsersSharedContext;
    chat_shared: typeof Contexts.ChatSharedContext;
    video_chat_ended: typeof Contexts.VideoChatEndedContext;
    video_chat_participants_invited: typeof Contexts.VideoChatParticipantsInvitedContext;
    video_chat_scheduled: typeof Contexts.VideoChatScheduledContext;
    video_chat_started: typeof Contexts.VideoChatStartedContext;
    web_app_data: typeof Contexts.WebAppDataContext;
    service_message: typeof Contexts.MessageContext;
    message_reaction: typeof Contexts.MessageReactionContext;
    message_reaction_count: typeof Contexts.MessageReactionCountContext;
    chat_boost: typeof Contexts.ChatBoostContext;
    removed_chat_boost: typeof Contexts.RemovedChatBoostContext;
    giveaway_created: typeof Contexts.GiveawayCreatedContext;
    giveaway_completed: typeof Contexts.GiveawayCompletedContext;
    giveaway_winners: typeof Contexts.GiveawayWinnersContext;
};
