import type { Message } from "./structures/index";
import type { MessageEventName } from "./types";
/** Helper for getters memoization */
export declare function memoizeGetters<T>(cls: new (...args: any[]) => T, fields: (keyof T)[]): void;
/** Helper for construct mixins */
export declare const applyMixins: (derivedCtor: any, baseCtors: any[]) => void;
/** Guard to check is it play object */
export declare const isPlainObject: (object: object) => object is Record<string, any>;
/** Helper for filter objects */
export declare const filterPayload: (payload: Record<string, any>) => Record<string, unknown>;
/** Guard to check is string can be parsed via {@link JSON.parse} */
export declare const isParsable: (source: string) => boolean;
/** Array of SERVICE_MESSAGE_EVENTS */
export declare const SERVICE_MESSAGE_EVENTS: MessageEventName[];
/** Array of EVENTS */
export declare const EVENTS: [keyof Message, MessageEventName][];
