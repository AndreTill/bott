import { inMemoryStorage } from '@gramio/storage';
import { Plugin, isPlainObject } from 'gramio';

function createProxy(value, onUpdate, sessionKey) {
  if (typeof value !== "object") return value;
  return new Proxy(value, {
    get(target, key) {
      const value2 = target[key];
      return isPlainObject(value2) || Array.isArray(value2) ? createProxy(value2, onUpdate) : value2;
    },
    set(target, key, newValue) {
      target[key] = newValue;
      onUpdate();
      return true;
    }
  });
}
function session(options = {}) {
  const key = options.key ?? "session";
  const storage = options.storage ?? inMemoryStorage();
  const getSessionKey = options.getSessionKey ?? ((context) => `${context.senderId}`);
  return new Plugin("@gramio/session").derive(
    [
      "message",
      "callback_query",
      "channel_post",
      "chat_join_request",
      "chosen_inline_result",
      "inline_query",
      "web_app_data",
      "successful_payment",
      "video_chat_started",
      "video_chat_ended",
      "video_chat_scheduled",
      "video_chat_participants_invited",
      "passport_data",
      "new_chat_title",
      "new_chat_photo",
      "pinned_message",
      "poll_answer",
      "pre_checkout_query",
      "proximity_alert_triggered",
      "shipping_query",
      "group_chat_created",
      "delete_chat_photo",
      "location",
      "invoice",
      "message_auto_delete_timer_changed",
      "migrate_from_chat_id",
      "migrate_to_chat_id",
      "new_chat_members",
      "chat_shared"
    ],
    async (context) => {
      const obj = {};
      const sessionKey = await getSessionKey(context);
      const sessionData = await storage.get(sessionKey) ?? // @ts-ignore
      (options.initial && await options.initial(context)) ?? {};
      const onUpdate = () => storage.set(sessionKey, session2);
      let session2 = createProxy(sessionData, onUpdate);
      Object.defineProperty(obj, key, {
        enumerable: true,
        get: () => session2,
        set(value) {
          session2 = createProxy(value, onUpdate);
        }
      });
      return obj;
    }
  );
}

export { session };
