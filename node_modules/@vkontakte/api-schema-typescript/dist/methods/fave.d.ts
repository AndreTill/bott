/**
 * This is auto-generated file, don't modify this file manually
 */
import { FaveBookmark } from '../objects/fave/FaveBookmark';
import { FavePage } from '../objects/fave/FavePage';
import { FaveTag } from '../objects/fave/FaveTag';
import { GroupsGroup } from '../objects/groups/GroupsGroup';
import { UsersUserFull } from '../objects/users/UsersUserFull';
/**
 * fave.addArticle
 */
export interface FaveAddArticleParams {
    url: string;
}
export declare type FaveAddArticleResponse = 1;
/**
 * fave.addLink
 *
 * Adds a link to user faves.
 */
export interface FaveAddLinkParams {
    /**
     * Link URL.
     */
    link: string;
}
export declare type FaveAddLinkResponse = 1;
/**
 * fave.addPage
 */
export interface FaveAddPageParams {
    user_id?: number;
    group_id?: number;
}
export declare type FaveAddPageResponse = 1;
/**
 * fave.addPost
 */
export interface FaveAddPostParams {
    owner_id: number;
    id: number;
    access_key?: string;
}
export declare type FaveAddPostResponse = 1;
/**
 * fave.addProduct
 */
export interface FaveAddProductParams {
    owner_id: number;
    id: number;
    access_key?: string;
}
export declare type FaveAddProductResponse = 1;
/**
 * fave.addTag
 */
export interface FaveAddTagParams {
    name?: string;
    position?: 'back' | 'front';
}
export declare type FaveAddTagResponse = FaveTag;
/**
 * fave.addVideo
 */
export interface FaveAddVideoParams {
    owner_id: number;
    id: number;
    access_key?: string;
}
export declare type FaveAddVideoResponse = 1;
/**
 * fave.editTag
 */
export interface FaveEditTagParams {
    id: number;
    name: string;
}
export declare type FaveEditTagResponse = 1;
/**
 * fave.get
 */
export interface FaveGetParams {
    /**
     * '1' - to return additional 'wall', 'profiles', and 'groups' fields. By default: '0'.
     */
    extended?: 0 | 1;
    item_type?: 'article' | 'clip' | 'game' | 'link' | 'mini_app' | 'narrative' | 'page' | 'podcast' | 'post' | 'product' | 'video' | 'youla_product';
    /**
     * Tag ID.
     */
    tag_id?: number;
    /**
     * Offset needed to return a specific subset of users.
     */
    offset?: number;
    /**
     * Number of users to return.
     */
    count?: number;
    fields?: string;
    is_from_snackbar?: 0 | 1;
}
export interface FaveGetResponse {
    /**
     * Total number
     */
    count?: number;
    items?: FaveBookmark[];
}
export interface FaveGetExtendedResponse {
    /**
     * Total number
     */
    count?: number;
    items?: FaveBookmark[];
    profiles?: UsersUserFull[];
    groups?: GroupsGroup[];
}
/**
 * fave.getPages
 */
export interface FaveGetPagesParams {
    offset?: number;
    count?: number;
    type?: 'groups' | 'hints' | 'users';
    /**
     * objects.json#/definitions/base_user_group_fields
     */
    fields?: string;
    tag_id?: number;
}
export interface FaveGetPagesResponse {
    count?: number;
    items?: FavePage[];
}
/**
 * fave.getTags
 */
export interface FaveGetTagsParams {
}
export interface FaveGetTagsResponse {
    count?: number;
    items?: FaveTag[];
}
/**
 * fave.markSeen
 */
export interface FaveMarkSeenParams {
}
export declare type FaveMarkSeenResponse = 0 | 1;
/**
 * fave.removeArticle
 */
export interface FaveRemoveArticleParams {
    owner_id: number;
    article_id: number;
}
export declare type FaveRemoveArticleResponse = 0 | 1;
/**
 * fave.removeLink
 *
 * Removes link from the user's faves.
 */
export interface FaveRemoveLinkParams {
    /**
     * Link ID (can be obtained by [vk.com/dev/faves.getLinks|faves.getLinks] method).
     */
    link_id?: string;
    /**
     * Link URL
     */
    link?: string;
}
export declare type FaveRemoveLinkResponse = 1;
/**
 * fave.removePage
 */
export interface FaveRemovePageParams {
    user_id?: number;
    group_id?: number;
}
export declare type FaveRemovePageResponse = 1;
/**
 * fave.removePost
 */
export interface FaveRemovePostParams {
    owner_id: number;
    id: number;
}
export declare type FaveRemovePostResponse = 1;
/**
 * fave.removeProduct
 */
export interface FaveRemoveProductParams {
    owner_id: number;
    id: number;
}
export declare type FaveRemoveProductResponse = 1;
/**
 * fave.removeTag
 */
export interface FaveRemoveTagParams {
    id: number;
}
export declare type FaveRemoveTagResponse = 1;
/**
 * fave.removeVideo
 */
export interface FaveRemoveVideoParams {
    owner_id: number;
    id: number;
}
export declare type FaveRemoveVideoResponse = 1;
/**
 * fave.reorderTags
 */
export interface FaveReorderTagsParams {
    ids: string;
}
export declare type FaveReorderTagsResponse = 1;
/**
 * fave.setPageTags
 */
export interface FaveSetPageTagsParams {
    user_id?: number;
    group_id?: number;
    tag_ids?: string;
}
export declare type FaveSetPageTagsResponse = 1;
/**
 * fave.setTags
 */
export interface FaveSetTagsParams {
    item_type?: 'article' | 'clip' | 'game' | 'link' | 'mini_app' | 'narrative' | 'page' | 'podcast' | 'post' | 'product' | 'video' | 'youla_product';
    item_owner_id?: number;
    item_id?: number;
    tag_ids?: string;
    link_id?: string;
    link_url?: string;
}
export declare type FaveSetTagsResponse = 1;
/**
 * fave.trackPageInteraction
 */
export interface FaveTrackPageInteractionParams {
    user_id?: number;
    group_id?: number;
}
export declare type FaveTrackPageInteractionResponse = 1;
